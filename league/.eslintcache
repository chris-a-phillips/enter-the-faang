[{"/Users/esquire/code/projects/enter-the-faang/league/src/index.js":"1","/Users/esquire/code/projects/enter-the-faang/league/src/App.js":"2","/Users/esquire/code/projects/enter-the-faang/league/src/SCApp.js":"3","/Users/esquire/code/projects/enter-the-faang/league/src/Data/Turn.js":"4","/Users/esquire/code/projects/enter-the-faang/league/src/Data/Unit.js":"5","/Users/esquire/code/projects/enter-the-faang/league/src/Data/FaangStats.js":"6","/Users/esquire/code/projects/enter-the-faang/league/src/Pages/WelcomeScreen/WelcomeScreen.js":"7","/Users/esquire/code/projects/enter-the-faang/league/src/Data/PlayerUnits.js":"8","/Users/esquire/code/projects/enter-the-faang/league/src/Data/EnemyUnits.js":"9","/Users/esquire/code/projects/enter-the-faang/league/src/Data/PlayerKingdoms.js":"10","/Users/esquire/code/projects/enter-the-faang/league/src/Pages/GameBoard/GameBoard.js":"11","/Users/esquire/code/projects/enter-the-faang/league/src/components/EnemyField/EnemyField.js":"12","/Users/esquire/code/projects/enter-the-faang/league/src/components/PlayerField/PlayerField.js":"13","/Users/esquire/code/projects/enter-the-faang/league/src/components/KingdomField/KingdomField.js":"14","/Users/esquire/code/projects/enter-the-faang/league/src/components/KingdomField/SCKingdomField.js":"15","/Users/esquire/code/projects/enter-the-faang/league/src/components/PlayerField/SCPlayerField.js":"16","/Users/esquire/code/projects/enter-the-faang/league/src/components/EnemyField/SCEnemyField.js":"17","/Users/esquire/code/projects/enter-the-faang/league/src/components/GameContext.js":"18","/Users/esquire/code/projects/enter-the-faang/league/src/Data/Functions.js":"19"},{"size":258,"mtime":1610039923597,"results":"20","hashOfConfig":"21"},{"size":3253,"mtime":1610560434562,"results":"22","hashOfConfig":"21"},{"size":135,"mtime":1610042728229,"results":"23","hashOfConfig":"21"},{"size":187,"mtime":1610575219097,"results":"24","hashOfConfig":"21"},{"size":1107,"mtime":1610484726713,"results":"25","hashOfConfig":"21"},{"size":9324,"mtime":1610484726711,"results":"26","hashOfConfig":"21"},{"size":1198,"mtime":1610484726716,"results":"27","hashOfConfig":"21"},{"size":7339,"mtime":1610492055242,"results":"28","hashOfConfig":"21"},{"size":4858,"mtime":1610484726710,"results":"29","hashOfConfig":"21"},{"size":1738,"mtime":1610488541132,"results":"30","hashOfConfig":"21"},{"size":2371,"mtime":1610586952126,"results":"31","hashOfConfig":"21"},{"size":1011,"mtime":1610508671780,"results":"32","hashOfConfig":"21"},{"size":2942,"mtime":1610586812150,"results":"33","hashOfConfig":"21"},{"size":1363,"mtime":1610498393491,"results":"34","hashOfConfig":"21"},{"size":514,"mtime":1610496277716,"results":"35","hashOfConfig":"21"},{"size":463,"mtime":1610498761022,"results":"36","hashOfConfig":"21"},{"size":423,"mtime":1610496299858,"results":"37","hashOfConfig":"21"},{"size":171,"mtime":1610568390484,"results":"38","hashOfConfig":"21"},{"size":1387,"mtime":1610586117428,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"oulkl",{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/esquire/code/projects/enter-the-faang/league/src/index.js",[],["84","85"],"/Users/esquire/code/projects/enter-the-faang/league/src/App.js",["86","87","88"],"import React, { useState, useMemo } from 'react';\nimport './App.css';\nimport { blueUnit, redUnit, yaboi } from './Data/Unit';\nimport { rounds } from './Data/Turn';\nimport EnemyFaangs from './Data/EnemyUnits';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport WelcomeScreen from './Pages/WelcomeScreen/WelcomeScreen';\nimport PlayerUnits from './Data/PlayerUnits';\nimport PlayerKingdoms from './Data/PlayerKingdoms';\nimport GameBoard from './Pages/GameBoard/GameBoard';\nimport { GameContext } from './components/GameContext'\n\n\nfunction App() {\n\t// DEFAULTS ARE FOR TESTING PURPOSES\n\t// ALL STATE HOOKS SHOULD BE EMPTY\n\tconst [difficulty, setDifficulty] = useState('normal');\n\tconst [armySize, setArmySize] = useState(20);\n\tconst [enemyUnits, setEnemyUnits] = useState();\n\tconst [gameStarted, setGameStarted] = useState(true);\n\tconst [trueSkill, setTrueSkill] = useState()\n\tconst [playerTeam, setPlayerTeam] = useState()\n\tconst [playerKingdoms, setPlayerKingdoms] = useState()\n\tconst [target, setTarget] = useState(null)\n\tconst [involved, setInvolved] = useState({\n\t\tinitiator: '',\n\t\tpossibleTargets: '',\n\t\tselectedTarget: '',\n\t});\n\tconst value = useMemo(() => ({involved, setInvolved}), [involved, setInvolved])\n\n\tconst attack = (attacker, defender) => {\n\t\tconsole.log(attacker);\n\t\tconsole.log(defender);\n\t};\n\n\tconst addNumber = () => {\n\t\trounds.takeTurn();\n\t\tconsole.log(rounds);\n\t};\n\n\t// console.log(enemyUnits)\n\t// console.log(playerTeam)\n\t// console.log(playerKingdoms)\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<GameContext.Provider value={value}>\n\t\t\t\t{/* <Link to='/'>Home</Link> */}\n\t\t\t\t<br />\n\t\t\t\t{!gameStarted ? (\n\t\t\t\t\t<WelcomeScreen\n\t\t\t\t\t\tsetDifficulty={setDifficulty}\n\t\t\t\t\t\tsetArmySize={setArmySize}\n\t\t\t\t\t\tsetTrueSkill={setTrueSkill}\n\t\t\t\t\t\tsetGameStarted={setGameStarted}\n\t\t\t\t\t\tenemyUnits={enemyUnits}\n\t\t\t\t\t\ttarget={target}\n\t\t\t\t\t\tsetTarget={setTarget}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<GameBoard\n\t\t\t\t\t\tenemyUnits={enemyUnits}\n\t\t\t\t\t\tplayerTeam={playerTeam}\n\t\t\t\t\t\tplayerKingdoms={playerKingdoms}\n\t\t\t\t\t\ttarget={target}\n\t\t\t\t\t\tsetTarget={setTarget}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<button\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tattack(blueUnit.attackUnit(redUnit), redUnit)\n\t\t\t\t\t}>\n\t\t\t\t\tblue attack red\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tattack(\n\t\t\t\t\t\t\tyaboi.team[1].attackUnit(yaboi.team[0]),\n\t\t\t\t\t\t\tyaboi.team[0]\n\t\t\t\t\t\t)\n\t\t\t\t\t}>\n\t\t\t\t\tred attack blue\n\t\t\t\t</button>\n\t\t\t\t<button>\n\t\t\t\t\t{yaboi.team[1].name} attack {yaboi.team[0].name}\n\t\t\t\t</button>\n\t\t\t\t<button onClick={addNumber}>add turn</button>\n\t\t\t\t<p>{JSON.stringify(yaboi.team)}</p>\n\t\t\t\t{yaboi.team.map((piece) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={piece.name}>\n\t\t\t\t\t\t\t<p>{piece.name}</p>\n\t\t\t\t\t\t\t<p>{piece.health}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t{/* <code>{JSON.stringify(enemyUnits)}</code> */}\n\t\t\t\t{difficulty && armySize && playerTeam ? (\n\t\t\t\t\t// && trueSkill\n\t\t\t\t\t<>\n\t\t\t\t\t\t<EnemyFaangs\n\t\t\t\t\t\t\tdifficulty={difficulty}\n\t\t\t\t\t\t\tarmySize={armySize}\n\t\t\t\t\t\t\tsetEnemyUnits={setEnemyUnits}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t) : null}\n\t\t\t\t<PlayerUnits\n\t\t\t\t\ttrueSkill={trueSkill}\n\t\t\t\t\tsetPlayerTeam={setPlayerTeam}\n\t\t\t\t/>\n\t\t\t\t{playerTeam ? (\n\t\t\t\t\t<PlayerKingdoms\n\t\t\t\t\t\tsetPlayerKingdoms={setPlayerKingdoms}\n\t\t\t\t\t\tplayerTeam={playerTeam}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t</GameContext.Provider>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","/Users/esquire/code/projects/enter-the-faang/league/src/SCApp.js",["89"],"/Users/esquire/code/projects/enter-the-faang/league/src/Data/Turn.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/Data/Unit.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/Data/FaangStats.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/Pages/WelcomeScreen/WelcomeScreen.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/Data/PlayerUnits.js",["90"],"import React, { useEffect } from 'react';\nimport { faang } from './FaangStats';\n\nconst PlayerUnits = ({ trueSkill, setPlayerTeam }) => {\n\tconst eliteStats = faang.elite;\n\n\tfunction averageStats(object) {\n\t\t// TURN THE OBJECT INTO AN ARRAY OF OBJECTS\n\t\tlet data = Object.entries(object);\n\t\t// CREATE AN ARRAY FOR MAPPED DATA TO GO INTO\n\t\tlet dataArray = [];\n\t\t// CREATE AN OBJECT TO HOLD ALL STATS FROM MAPPED ARRAY\n\t\tlet statsObject = {\n\t\t\thealth: [],\n\t\t\tattack: [],\n\t\t\tdefense: [],\n\t\t\tregeneration: [],\n\t\t\tspeed: [],\n\t\t\ttotal: [],\n\t\t};\n\t\t// PUSH SEPARATE DATA SO IT CAN BE MUTATED\n\t\tdata.forEach((e) => {\n            dataArray.push(e[1]);\n\t\t});\n\t\t// PUSH ALL STATS INTO STATS OBJECT\n\t\tfor (let i = 0; i < dataArray.length; i++) {\n\t\t\tstatsObject.health.push(dataArray[i].health);\n\t\t\tstatsObject.attack.push(dataArray[i].attack);\n\t\t\tstatsObject.defense.push(dataArray[i].defense);\n\t\t\tstatsObject.regeneration.push(dataArray[i].regeneration);\n\t\t\tstatsObject.speed.push(dataArray[i].speed);\n\t\t\tstatsObject.total.push(dataArray[i].total);\n\t\t}\n\n\t\t// REDUCE ALL STATS IN EACH ARRAY INTO ONE VALUE\n\t\t// health\n\t\tstatsObject.health =\n\t\t\tstatsObject.health.reduce((a, b) => a + b, 0) /\n\t\t\tstatsObject.health.length;\n\t\t// attack\n\t\tstatsObject.attack =\n\t\t\tstatsObject.attack.reduce((a, b) => a + b, 0) /\n\t\t\tstatsObject.attack.length;\n\t\t// defense\n\t\tstatsObject.defense =\n\t\t\tstatsObject.defense.reduce((a, b) => a + b, 0) /\n\t\t\tstatsObject.defense.length;\n\t\t// regeneration\n\t\tstatsObject.regeneration =\n\t\t\tstatsObject.regeneration.reduce((a, b) => a + b, 0) /\n\t\t\tstatsObject.regeneration.length;\n\t\t// speed\n\t\tstatsObject.speed =\n\t\t\tstatsObject.speed.reduce((a, b) => a + b, 0) /\n\t\t\tstatsObject.speed.length;\n\t\t// total\n\t\tstatsObject.total =\n\t\t\tstatsObject.total.reduce((a, b) => a + b, 0) /\n            statsObject.total.length;\n        return statsObject\n\t\t// setTitanConversion(statsObject);\n\t}\n\n\tclass Titan {\n\t\tconstructor(\n\t\t\tname,\n\t\t\telement,\n\t\t\tkingdom,\n\t\t\thealth,\n\t\t\tattack,\n\t\t\tdefense,\n\t\t\tregeneration,\n\t\t\tspeed,\n            energy,\n            zen,\n            showcase\n\t\t) {\n\t\t\t// specs\n\t\t\tthis.isAlive = true;\n\t\t\t// stats\n\t\t\tthis.name = name;\n\t\t\tthis.element = element;\n\t\t\tthis.kingdom = kingdom;\n\t\t\tthis.health = health;\n\t\t\tthis.attack = attack;\n\t\t\tthis.defense = defense;\n\t\t\tthis.regeneration = regeneration;\n\t\t\tthis.speed = speed;\n\t\t\tthis.energy = energy;\n            this.zen = zen;\n            this.showcase = showcase\n\t\t}\n\t\tspeak() {\n\t\t\tconsole.log(this.name);\n\t\t}\n\t\tattackUnit(unit) {\n\t\t\tconsole.log(\n\t\t\t\t`${this.name} attacked ${unit.name} and now it has ${unit.health}`\n\t\t\t);\n\t\t\tunit.health -= this.attack;\n\t\t}\n\t}\n\n    const titans = {\n\t\tfire: {\n\t\t\thealth: 6,\n\t\t\tattack: 9,\n\t\t\tdefense: 5,\n\t\t\tenergy: 8,\n\t\t\tregeneration: 4,\n\t\t\tspeed: 7,\n\t\t\tzen: 5,\n\t\t},\n\t\twater: {\n\t\t\thealth: 9,\n\t\t\tattack: 5,\n\t\t\tdefense: 7,\n\t\t\tenergy: 5,\n\t\t\tregeneration: 8,\n\t\t\tspeed: 6,\n\t\t\tzen: 4,\n\t\t},\n\t\tstone: {\n\t\t\thealth: 8,\n\t\t\tattack: 5,\n\t\t\tdefense: 9,\n\t\t\tenergy: 4,\n\t\t\tregeneration: 6,\n\t\t\tspeed: 5,\n\t\t\tzen: 7,\n\t\t},\n\t\tair: {\n\t\t\thealth: 4,\n\t\t\tattack: 6,\n\t\t\tdefense: 5,\n\t\t\tenergy: 9,\n\t\t\tregeneration: 7,\n\t\t\tspeed: 8,\n\t\t\tzen: 5,\n\t\t},\n\t\tlightning: {\n\t\t\thealth: 5,\n\t\t\tattack: 8,\n\t\t\tdefense: 4,\n\t\t\tenergy: 7,\n\t\t\tregeneration: 5,\n\t\t\tspeed: 9,\n\t\t\tzen: 6,\n\t\t},\n\t\tterra: {\n\t\t\thealth: 7,\n\t\t\tattack: 4,\n\t\t\tdefense: 6,\n\t\t\tenergy: 5,\n\t\t\tregeneration: 9,\n\t\t\tspeed: 5,\n\t\t\tzen: 8,\n\t\t},\n\t\tmetal: {\n\t\t\thealth: 5,\n\t\t\tattack: 7,\n\t\t\tdefense: 8,\n\t\t\tenergy: 6,\n\t\t\tregeneration: 5,\n\t\t\tspeed: 4,\n\t\t\tzen: 9,\n\t\t},\n\t};\n    \n    const fireTitan = new Titan(\n\t\t'Ajna',\n\t\t'Fire',\n\t\t'Fire Kingdom',\n        averageStats(eliteStats).health * (titans.fire.health * .1),\n        averageStats(eliteStats).attack * (titans.fire.attack * .1),\n        averageStats(eliteStats).defense * (titans.fire.defense * .1),\n        averageStats(eliteStats).regeneration * (titans.fire.regeneration * .1),\n        averageStats(eliteStats).speed * (titans.fire.speed * .1),\n        titans.fire.energy,\n        titans.fire.zen,\n        titans.fire\n    );\n\n    const waterTitan = new Titan(\n\t\t'Mulad',\n\t\t'Water',\n\t\t'Water Kingdom',\n        averageStats(eliteStats).health * (titans.water.health * .1),\n        averageStats(eliteStats).attack * (titans.water.attack * .1),\n        averageStats(eliteStats).defense * (titans.water.defense * .1),\n        averageStats(eliteStats).regeneration * (titans.water.regeneration * .1),\n        averageStats(eliteStats).speed * (titans.water.speed * .1),\n        titans.water.energy,\n        titans.water.zen,\n        titans.water\n    );\n\n    const stoneTitan = new Titan(\n\t\t'Vishu',\n\t\t'Rock',\n\t\t'Stone Kingdom',\n        averageStats(eliteStats).health * (titans.stone.health * .1),\n        averageStats(eliteStats).attack * (titans.stone.attack * .1),\n        averageStats(eliteStats).defense * (titans.stone.defense * .1),\n        averageStats(eliteStats).regeneration * (titans.stone.regeneration * .1),\n        averageStats(eliteStats).speed * (titans.stone.speed * .1),\n        titans.stone.energy,\n        titans.stone.zen,\n        titans.stone\n    );\n\n    const airTitan = new Titan(\n\t\t'Nabhi',\n\t\t'Air',\n\t\t'Air Kingdom',\n        averageStats(eliteStats).health * (titans.air.health * .1),\n        averageStats(eliteStats).attack * (titans.air.attack * .1),\n        averageStats(eliteStats).defense * (titans.air.defense * .1),\n        averageStats(eliteStats).regeneration * (titans.air.regeneration * .1),\n        averageStats(eliteStats).speed * (titans.air.speed * .1),\n        titans.air.energy,\n        titans.air.zen,\n        titans.air\n    );\n\n    const lightningTitan = new Titan(\n\t\t'Svadhi',\n\t\t'Electricity',\n\t\t'Lightning Kingdom',\n        averageStats(eliteStats).health * (titans.lightning.health * .1),\n        averageStats(eliteStats).attack * (titans.lightning.attack * .1),\n        averageStats(eliteStats).defense * (titans.lightning.defense * .1),\n        averageStats(eliteStats).regeneration * (titans.lightning.regeneration * .1),\n        averageStats(eliteStats).speed * (titans.lightning.speed * .1),\n        titans.lightning.energy,\n        titans.lightning.zen,\n        titans.lightning\n    );\n\n    const terraTitan = new Titan(\n\t\t'Sahas',\n\t\t'Plant',\n\t\t'Terra Kingdom',\n        averageStats(eliteStats).health * (titans.terra.health * .1),\n        averageStats(eliteStats).attack * (titans.terra.attack * .1),\n        averageStats(eliteStats).defense * (titans.terra.defense * .1),\n        averageStats(eliteStats).regeneration * (titans.terra.regeneration * .1),\n        averageStats(eliteStats).speed * (titans.terra.speed * .1),\n        titans.terra.energy,\n        titans.terra.zen,\n        titans.terra\n    );\n\n    const metalTitan = new Titan(\n\t\t'Anaht',\n\t\t'Metal',\n\t\t'Metal Kingdom',\n        averageStats(eliteStats).health * (titans.metal.health * .1),\n        averageStats(eliteStats).attack * (titans.metal.attack * .1),\n        averageStats(eliteStats).defense * (titans.metal.defense * .1),\n        averageStats(eliteStats).regeneration * (titans.metal.regeneration * .1),\n        averageStats(eliteStats).speed * (titans.metal.speed * .1),\n        titans.metal.energy,\n        titans.metal.zen,\n        titans.metal\n    );\n\n    useEffect(() => {\n        setPlayerTeam([fireTitan, waterTitan, stoneTitan, airTitan, lightningTitan, terraTitan, metalTitan])\n    },[])\n\n\n        \n\n\n\treturn <div></div>;\n};\n\nexport default PlayerUnits;\n","/Users/esquire/code/projects/enter-the-faang/league/src/Data/EnemyUnits.js",["91"],"import React, { useEffect } from 'react';\nimport { pedigree, faang, randomNames } from './FaangStats';\n\nconst EnemyFaangs = ({ difficulty, armySize, setEnemyUnits }) => {\n    const unitPool = []\n\n\tclass BasicFaang {\n\t\tconstructor(\n\t\t\tname,\n\t\t\thealth,\n\t\t\tattack,\n\t\t\tdefense,\n\t\t\tregeneration,\n\t\t\tspeed,\n\t\t\trank,\n\t\t\tpedigree,\n\t\t\tspecies\n\t\t) {\n\t\t\t// specs\n\t\t\tthis.isAlive = true;\n\t\t\tthis.rank = rank;\n\t\t\tthis.pedigree = pedigree;\n\t\t\tthis.species = species;\n\t\t\t// stats\n\t\t\tthis.name = name;\n\t\t\tthis.health = health;\n\t\t\tthis.attack = attack;\n\t\t\tthis.defense = defense;\n\t\t\tthis.regeneration = regeneration;\n\t\t\tthis.speed = speed;\n\t\t}\n\t\tspeak() {\n\t\t\tconsole.log(this.name);\n\t\t}\n\t\tattackUnit(unit) {\n\t\t\tconsole.log(\n\t\t\t\t`${this.name} attacked ${unit.name} and now it has ${unit.health}`\n\t\t\t);\n\t\t\tunit.health -= this.attack;\n\t\t}\n\t}\n\n\tclass AdvancedFaang extends BasicFaang {\n\t\tconstructor(\n\t\t\tname,\n\t\t\thealth,\n\t\t\tattack,\n\t\t\tdefense,\n\t\t\tregeneration,\n\t\t\tspeed,\n\t\t\trank,\n\t\t\tpedigree,\n\t\t\tspecies\n\t\t) {\n\t\t\tsuper(\n\t\t\t\tname,\n\t\t\t\thealth,\n\t\t\t\tattack,\n\t\t\t\tdefense,\n\t\t\t\tregeneration,\n\t\t\t\tspeed,\n\t\t\t\trank,\n\t\t\t\tpedigree,\n\t\t\t\tspecies\n\t\t\t);\n\t\t\tthis.attack = 'infinite';\n\t\t\tthis.isAdmin = true;\n\t\t\tthis.class = 'Advanced';\n\t\t}\n\t}\n\n\tclass EliteFaang extends AdvancedFaang {\n\t\tconstructor(\n\t\t\tname,\n\t\t\thealth,\n\t\t\tattack,\n\t\t\tdefense,\n\t\t\tregeneration,\n\t\t\tspeed,\n\t\t\trank,\n\t\t\tpedigree,\n\t\t\tspecies\n\t\t) {\n\t\t\tsuper(\n\t\t\t\tname,\n\t\t\t\thealth,\n\t\t\t\tattack,\n\t\t\t\tdefense,\n\t\t\t\tregeneration,\n\t\t\t\tspeed,\n\t\t\t\trank,\n\t\t\t\tpedigree,\n\t\t\t\tspecies\n\t\t\t);\n\t\t\tthis.class = 'Elite';\n\t\t}\n\t}\n\n\t// FAANG GENERATOR\n\tlet basicUnits = faang.basic;\n\tlet advancedUnits = faang.advanced;\n\tlet eliteUnits = faang.elite;\n\n\t// RANDOM UNIT GENERATOR THAT PUSHES THE UNITS INTO THE UNIT POOL\n\tfunction generateRandomUnit(rank) {\n\t\tlet length = Object.keys(rank).length;\n\t\tlet randomNumber = Math.floor(Math.random() * length);\n\t\tlet randomUnit = rank[Object.keys(rank)[randomNumber]];\n\t\tlet percentChance = Math.floor(Math.random() * 100);\n\t\trandomUnit.name =\n\t\t\trandomNames[Math.floor(Math.random() * randomNames.length)];\n\n\t\tif (rank.dra.rank === 'Basic') {\n\t\t\tif (percentChance <= 95) {\n\t\t\t\trandomUnit.pedigree =\n\t\t\t\t\tpedigree.commonLevelOne[\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\tMath.random() * pedigree.commonLevelOne.length\n\t\t\t\t\t\t)\n\t\t\t\t\t];\n\t\t\t} else {\n\t\t\t\trandomUnit.pedigree =\n\t\t\t\t\tpedigree.specialLevelOne[\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\tMath.random() * pedigree.specialLevelOne.length\n\t\t\t\t\t\t)\n\t\t\t\t\t];\n\t\t\t}\n\t\t\tunitPool.push(\n\t\t\t\tnew BasicFaang(\n\t\t\t\t\trandomUnit.name,\n\t\t\t\t\trandomUnit.health,\n\t\t\t\t\trandomUnit.attack,\n\t\t\t\t\trandomUnit.defense,\n\t\t\t\t\trandomUnit.regeneration,\n\t\t\t\t\trandomUnit.speed,\n\t\t\t\t\trandomUnit.rank,\n\t\t\t\t\trandomUnit.pedigree,\n\t\t\t\t\trandomUnit.species\n\t\t\t\t)\n\t\t\t);\n\t\t} else if (rank.dra.rank === 'Advanced') {\n\t\t\tif (percentChance <= 95) {\n\t\t\t\trandomUnit.pedigree =\n\t\t\t\t\tpedigree.commonLevelTwo[\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\tMath.random() * pedigree.commonLevelTwo.length\n\t\t\t\t\t\t)\n\t\t\t\t\t];\n\t\t\t} else {\n\t\t\t\trandomUnit.pedigree =\n\t\t\t\t\tpedigree.specialLevelTwo[\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\tMath.random() * pedigree.specialLevelTwo.length\n\t\t\t\t\t\t)\n\t\t\t\t\t];\n\t\t\t}\n\t\t\tunitPool.push(\n\t\t\t\tnew AdvancedFaang(\n\t\t\t\t\trandomUnit.name,\n\t\t\t\t\trandomUnit.health,\n\t\t\t\t\trandomUnit.attack,\n\t\t\t\t\trandomUnit.defense,\n\t\t\t\t\trandomUnit.regeneration,\n\t\t\t\t\trandomUnit.speed,\n\t\t\t\t\trandomUnit.rank,\n\t\t\t\t\trandomUnit.pedigree,\n\t\t\t\t\trandomUnit.species\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\tif (percentChance <= 95) {\n\t\t\t\trandomUnit.pedigree =\n\t\t\t\t\tpedigree.commonLevelThree[\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\tMath.random() * pedigree.commonLevelThree.length\n\t\t\t\t\t\t)\n\t\t\t\t\t];\n\t\t\t} else {\n\t\t\t\trandomUnit.pedigree =\n\t\t\t\t\tpedigree.specialLevelThree[\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\tMath.random() * pedigree.specialLevelThree.length\n\t\t\t\t\t\t)\n\t\t\t\t\t];\n\t\t\t}\n\t\t\tunitPool.push(\n\t\t\t\tnew EliteFaang(\n\t\t\t\t\trandomUnit.name,\n\t\t\t\t\trandomUnit.health,\n\t\t\t\t\trandomUnit.attack,\n\t\t\t\t\trandomUnit.defense,\n\t\t\t\t\trandomUnit.regeneration,\n\t\t\t\t\trandomUnit.speed,\n\t\t\t\t\trandomUnit.rank,\n\t\t\t\t\trandomUnit.pedigree,\n\t\t\t\t\trandomUnit.species\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\t// PLAYER GAME SETTINGS\n\n\tfor (let i = 0; i < armySize; i++) {\n\t\t// SELECT PERCENTAGE OF UNITS WILL HAVE WHICH CLASSES\n\t\tlet difficultyArray = [];\n\t\tif (difficulty === 'easy') {\n\t\t\tdifficultyArray = [70, 95];\n\t\t} else if (difficulty === 'normal') {\n\t\t\tdifficultyArray = [60, 90];\n\t\t} else if (difficulty === 'veteran') {\n\t\t\tdifficultyArray = [40, 70];\n\t\t} else if (difficulty === 'insane') {\n\t\t\tdifficultyArray = [20, 50];\n\t\t}\n\n\t\t// SELECT HOW MANY UNITS WILL BE CREATED\n\t\tlet percentChance = Math.floor(Math.random() * 100);\n\t\tif (percentChance < difficultyArray[0]) {\n\t\t\tgenerateRandomUnit(basicUnits);\n\t\t} else if (percentChance < difficultyArray[1]) {\n\t\t\tgenerateRandomUnit(advancedUnits);\n\t\t} else {\n\t\t\tgenerateRandomUnit(eliteUnits);\n\t\t}\n    }\n\n    useEffect(() => {\n        setEnemyUnits(unitPool)\n    }, [])\n    \n\treturn <div></div>;\n};\n\nexport default EnemyFaangs;","/Users/esquire/code/projects/enter-the-faang/league/src/Data/PlayerKingdoms.js",["92"],"import React, { useEffect } from 'react';\n\nconst PlayerKingdoms = ({ setPlayerKingdoms, playerTeam }) => {\n\tclass Kingdom {\n\t\tconstructor(name, health, defense, regeneration, showcase) {\n\t\t\tthis.name = name;\n\t\t\tthis.health = health;\n\t\t\tthis.defense = defense;\n\t\t\tthis.regeneration = regeneration;\n\t\t\tthis.showcase = showcase;\n\t\t}\n\t}\n\n\tconst fireKingdom = new Kingdom(\n\t\t'Fire Kingdom',\n\t\tplayerTeam[0].health * 3,\n\t\tplayerTeam[0].defense,\n\t\tplayerTeam[0].regeneration,\n\t\tplayerTeam[0].showcase\n\t);\n\n\tconst waterKingdom = new Kingdom(\n\t\t'Water Kingdom',\n\t\tplayerTeam[1].health * 3,\n\t\tplayerTeam[1].defense,\n\t\tplayerTeam[1].regeneration,\n\t\tplayerTeam[1].showcase\n\t);\n\n\tconst stoneKingdom = new Kingdom(\n\t\t'Stone Kingdom',\n\t\tplayerTeam[2].health * 3,\n\t\tplayerTeam[2].defense,\n\t\tplayerTeam[2].regeneration,\n\t\tplayerTeam[2].showcase\n\t);\n\n\tconst airKingdom = new Kingdom(\n\t\t'Air Kingdom',\n\t\tplayerTeam[3].health * 3,\n\t\tplayerTeam[3].defense,\n\t\tplayerTeam[3].regeneration,\n\t\tplayerTeam[3].showcase\n\t);\n\n\tconst lightningKingdom = new Kingdom(\n\t\t'Lightning Kingdom',\n\t\tplayerTeam[4].health * 3,\n\t\tplayerTeam[4].defense,\n\t\tplayerTeam[4].regeneration,\n\t\tplayerTeam[4].showcase\n\t);\n\n\tconst terraKingdom = new Kingdom(\n\t\t'Terra Kingdom',\n\t\tplayerTeam[5].health * 3,\n\t\tplayerTeam[5].defense,\n\t\tplayerTeam[5].regeneration,\n\t\tplayerTeam[5].showcase\n\t);\n\n\tconst metalKingdom = new Kingdom(\n\t\t'Metal Kingdom',\n\t\tplayerTeam[6].health * 3,\n\t\tplayerTeam[6].defense,\n\t\tplayerTeam[6].regeneration,\n\t\tplayerTeam[6].showcase\n\t);\n\n\tuseEffect(() => {\n\t\tsetPlayerKingdoms([\n\t\t\tfireKingdom,\n\t\t\twaterKingdom,\n\t\t\tstoneKingdom,\n\t\t\tairKingdom,\n\t\t\tlightningKingdom,\n\t\t\tterraKingdom,\n\t\t\tmetalKingdom,\n\t\t]);\n\t}, []);\n\n\treturn <div></div>;\n};\n\nexport default PlayerKingdoms;\n","/Users/esquire/code/projects/enter-the-faang/league/src/Pages/GameBoard/GameBoard.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/components/EnemyField/EnemyField.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/components/PlayerField/PlayerField.js",["93","94"],"import React, { useState, useEffect, useContext } from 'react';\nimport { GameContext } from '../GameContext';\nimport { PlayerFieldLabel, PlayerFieldWrapper, PlayerFlexContainer, TitanContainer, TitanHealth, TitanName, TitanStats } from './SCPlayerField';\n\nconst PlayerField = ({ playerTeam, target, setTarget, functions }) => {\n\tconst { involved, setInvolved } = useContext(GameContext);\n\tconst [activeTitans, setActiveTitans] = useState(playerTeam.slice(0, 2));\n\t// const { involved, setInvolved } = useContext(GameContext);\n\n\t// console.log(involved);\n\n\t// console.log(Functions.choose())\n\n\tfunction swap(list, activeOne, activeTwo) {\n\t\tlist[activeOne] = list.splice(activeTwo, 1, list[activeOne])[0];\n\t\tsetActiveTitans([playerTeam[0], playerTeam[1]]);\n\t\treturn list;\n\t}\n\n\tconsole.log(functions)\n\n\t// 1 setInvolved initiator to specific object (choose)\n\t// 2 setInvolved possibleTargets\n\t// 3 setInvolved selectedTarget (select)\n\t// reset setInvolved\n\n\t// SELECT, CHOOSE, ACTION\n\n\t// select this action with the click\n\tfunction select(a) {\n\t\t// 1 SELECT\n\t\tconsole.log(a)\n\t\t// set initiator to where the button was clicked\n\t\t// set action to what was clicked\n\t\tsetInvolved({ ...involved, initiator: a, action: 'attack'});\n\t}\n\n\t// choose this action once select is opened\n\tfunction choose(b) {\n\t\t// 2 CHOOSE\n\t\t// do stuff only if button was clicked\n\t\tif (involved.action) {\n\t\t\t// set selected target to the next click\n\t\t\tsetInvolved({ ...involved, selectedTarget: b})\n\t\t\t// depending on the action do something\n\t\t\tif (involved.action === 'attack') {\n\t\t\t\tconsole.log(involved)\n\t\t\t\t// perform this action using the selected target\n\t\t\t\tattack(involved.initiator, b);\n\t\t\t}\n\t\t}\n\t}\n\n\t// actions to take\n\t// attacker is where the first button was clicked (involved.initiator)\n\t// target is the second click (involved.selectedTarget)\n\tconst attack = (attacker, target) => {\n\t\t// 3 ACTION\n\t\tif (attacker !== target) {\n\t\t\tattacker.attackUnit(target);\n\t\t} else {\n\t\t\tconsole.log('CHOOSE NEW TARGET')\n\t\t}\n\t\t// set action in involved to false so only this click is registered\n\t\tsetInvolved({ ...involved, action: false});\n\t}\n\n\tuseEffect(() => {}, [activeTitans]);\n\n\treturn (\n\t\t<PlayerFieldWrapper>\n\t\t\t<PlayerFieldLabel>Titans</PlayerFieldLabel>\n\t\t\t<PlayerFlexContainer>\n\t\t\t\t{activeTitans.map((unit) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<TitanContainer\n\t\t\t\t\t\t\tkey={unit.name}\n\t\t\t\t\t\t\tonClick={() => functions.choose(unit)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<TitanName>{unit.name}</TitanName>\n\t\t\t\t\t\t\t<TitanHealth>{unit.health}</TitanHealth>\n\t\t\t\t\t\t\t<TitanStats>\n\t\t\t\t\t\t\t\t<p>{unit.kingdom}</p>\n\t\t\t\t\t\t\t</TitanStats>\n\t\t\t\t\t\t\t<button onClick={() => functions.select(unit)}>attack</button>\n\t\t\t\t\t\t</TitanContainer>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t<button onClick={() => swap(playerTeam, 0, 4)}>swap</button>\n\t\t\t\t{/* <button onClick={test}>console log next click</button> */}\n\t\t\t</PlayerFlexContainer>\n\t\t\t{playerTeam.slice(2).map((unit) => unit.name)}\n\t\t</PlayerFieldWrapper>\n\t);\n};\n\nexport default PlayerField;","/Users/esquire/code/projects/enter-the-faang/league/src/components/KingdomField/KingdomField.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/components/KingdomField/SCKingdomField.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/components/PlayerField/SCPlayerField.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/components/EnemyField/SCEnemyField.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/components/GameContext.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/Data/Functions.js",["95","96"],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":6,"column":10,"nodeType":"103","messageId":"104","endLine":6,"endColumn":14},{"ruleId":"101","severity":1,"message":"105","line":6,"column":16,"nodeType":"103","messageId":"104","endLine":6,"endColumn":21},{"ruleId":"101","severity":1,"message":"106","line":6,"column":23,"nodeType":"103","messageId":"104","endLine":6,"endColumn":29},{"ruleId":"101","severity":1,"message":"107","line":1,"column":8,"nodeType":"103","messageId":"104","endLine":1,"endColumn":14},{"ruleId":"108","severity":1,"message":"109","line":270,"column":7,"nodeType":"110","endLine":270,"endColumn":9,"suggestions":"111"},{"ruleId":"108","severity":1,"message":"112","line":231,"column":8,"nodeType":"110","endLine":231,"endColumn":10,"suggestions":"113"},{"ruleId":"108","severity":1,"message":"114","line":80,"column":5,"nodeType":"110","endLine":80,"endColumn":7,"suggestions":"115"},{"ruleId":"101","severity":1,"message":"116","line":30,"column":11,"nodeType":"103","messageId":"104","endLine":30,"endColumn":17},{"ruleId":"101","severity":1,"message":"117","line":39,"column":11,"nodeType":"103","messageId":"104","endLine":39,"endColumn":17},{"ruleId":"101","severity":1,"message":"118","line":8,"column":8,"nodeType":"103","messageId":"104","endLine":8,"endColumn":14},{"ruleId":"101","severity":1,"message":"119","line":17,"column":8,"nodeType":"103","messageId":"104","endLine":17,"endColumn":14},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","'styled' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'airTitan', 'fireTitan', 'lightningTitan', 'metalTitan', 'setPlayerTeam', 'stoneTitan', 'terraTitan', and 'waterTitan'. Either include them or remove the dependency array. If 'setPlayerTeam' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["122"],"React Hook useEffect has missing dependencies: 'setEnemyUnits' and 'unitPool'. Either include them or remove the dependency array. If 'setEnemyUnits' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["123"],"React Hook useEffect has missing dependencies: 'airKingdom', 'fireKingdom', 'lightningKingdom', 'metalKingdom', 'setPlayerKingdoms', 'stoneKingdom', 'terraKingdom', and 'waterKingdom'. Either include them or remove the dependency array. If 'setPlayerKingdoms' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["124"],"'select' is defined but never used.","'choose' is defined but never used.","'select' is assigned a value but never used.","'choose' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},"Update the dependencies array to be: [airTitan, fireTitan, lightningTitan, metalTitan, setPlayerTeam, stoneTitan, terraTitan, waterTitan]",{"range":"131","text":"132"},"Update the dependencies array to be: [setEnemyUnits, unitPool]",{"range":"133","text":"134"},"Update the dependencies array to be: [airKingdom, fireKingdom, lightningKingdom, metalKingdom, setPlayerKingdoms, stoneKingdom, terraKingdom, waterKingdom]",{"range":"135","text":"136"},[7269,7271],"[airTitan, fireTitan, lightningTitan, metalTitan, setPlayerTeam, stoneTitan, terraTitan, waterTitan]",[4797,4799],"[setEnemyUnits, unitPool]",[1676,1678],"[airKingdom, fireKingdom, lightningKingdom, metalKingdom, setPlayerKingdoms, stoneKingdom, terraKingdom, waterKingdom]"]