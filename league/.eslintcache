[{"/Users/esquire/code/projects/enter-the-faang/league/src/index.js":"1","/Users/esquire/code/projects/enter-the-faang/league/src/App.js":"2","/Users/esquire/code/projects/enter-the-faang/league/src/SCApp.js":"3","/Users/esquire/code/projects/enter-the-faang/league/src/Data/Turn.js":"4","/Users/esquire/code/projects/enter-the-faang/league/src/Data/Unit.js":"5","/Users/esquire/code/projects/enter-the-faang/league/src/Data/FaangStats.js":"6","/Users/esquire/code/projects/enter-the-faang/league/src/Pages/WelcomeScreen/WelcomeScreen.js":"7","/Users/esquire/code/projects/enter-the-faang/league/src/Data/PlayerUnits.js":"8","/Users/esquire/code/projects/enter-the-faang/league/src/Data/EnemyUnits.js":"9","/Users/esquire/code/projects/enter-the-faang/league/src/Data/PlayerKingdoms.js":"10","/Users/esquire/code/projects/enter-the-faang/league/src/Pages/GameBoard/GameBoard.js":"11","/Users/esquire/code/projects/enter-the-faang/league/src/components/EnemyField/EnemyField.js":"12","/Users/esquire/code/projects/enter-the-faang/league/src/components/PlayerField/PlayerField.js":"13","/Users/esquire/code/projects/enter-the-faang/league/src/components/KingdomField/KingdomField.js":"14"},{"size":258,"mtime":1610039923597,"results":"15","hashOfConfig":"16"},{"size":2642,"mtime":1610351853495,"results":"17","hashOfConfig":"16"},{"size":135,"mtime":1610042728229,"results":"18","hashOfConfig":"16"},{"size":187,"mtime":1610053059910,"results":"19","hashOfConfig":"16"},{"size":1107,"mtime":1610264044215,"results":"20","hashOfConfig":"16"},{"size":9324,"mtime":1610299755853,"results":"21","hashOfConfig":"16"},{"size":1198,"mtime":1610308718540,"results":"22","hashOfConfig":"16"},{"size":7090,"mtime":1610352595297,"results":"23","hashOfConfig":"16"},{"size":4858,"mtime":1610341967006,"results":"24","hashOfConfig":"16"},{"size":1517,"mtime":1610351151372,"results":"25","hashOfConfig":"16"},{"size":755,"mtime":1610351733225,"results":"26","hashOfConfig":"16"},{"size":486,"mtime":1610351679191,"results":"27","hashOfConfig":"16"},{"size":264,"mtime":1610352532052,"results":"28","hashOfConfig":"16"},{"size":444,"mtime":1610351747112,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"oulkl",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/esquire/code/projects/enter-the-faang/league/src/index.js",[],["61","62"],"/Users/esquire/code/projects/enter-the-faang/league/src/App.js",["63"],"/Users/esquire/code/projects/enter-the-faang/league/src/SCApp.js",["64"],"/Users/esquire/code/projects/enter-the-faang/league/src/Data/Turn.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/Data/Unit.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/Data/FaangStats.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/Pages/WelcomeScreen/WelcomeScreen.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/Data/PlayerUnits.js",["65"],"/Users/esquire/code/projects/enter-the-faang/league/src/Data/EnemyUnits.js",["66"],"import React, { useEffect } from 'react';\nimport { pedigree, faang, randomNames } from './FaangStats';\n\nconst EnemyFaangs = ({ difficulty, armySize, setEnemyUnits }) => {\n    const unitPool = []\n\n\tclass BasicFaang {\n\t\tconstructor(\n\t\t\tname,\n\t\t\thealth,\n\t\t\tattack,\n\t\t\tdefense,\n\t\t\tregeneration,\n\t\t\tspeed,\n\t\t\trank,\n\t\t\tpedigree,\n\t\t\tspecies\n\t\t) {\n\t\t\t// specs\n\t\t\tthis.isAlive = true;\n\t\t\tthis.rank = rank;\n\t\t\tthis.pedigree = pedigree;\n\t\t\tthis.species = species;\n\t\t\t// stats\n\t\t\tthis.name = name;\n\t\t\tthis.health = health;\n\t\t\tthis.attack = attack;\n\t\t\tthis.defense = defense;\n\t\t\tthis.regeneration = regeneration;\n\t\t\tthis.speed = speed;\n\t\t}\n\t\tspeak() {\n\t\t\tconsole.log(this.name);\n\t\t}\n\t\tattackUnit(unit) {\n\t\t\tconsole.log(\n\t\t\t\t`${this.name} attacked ${unit.name} and now it has ${unit.health}`\n\t\t\t);\n\t\t\tunit.health -= this.attack;\n\t\t}\n\t}\n\n\tclass AdvancedFaang extends BasicFaang {\n\t\tconstructor(\n\t\t\tname,\n\t\t\thealth,\n\t\t\tattack,\n\t\t\tdefense,\n\t\t\tregeneration,\n\t\t\tspeed,\n\t\t\trank,\n\t\t\tpedigree,\n\t\t\tspecies\n\t\t) {\n\t\t\tsuper(\n\t\t\t\tname,\n\t\t\t\thealth,\n\t\t\t\tattack,\n\t\t\t\tdefense,\n\t\t\t\tregeneration,\n\t\t\t\tspeed,\n\t\t\t\trank,\n\t\t\t\tpedigree,\n\t\t\t\tspecies\n\t\t\t);\n\t\t\tthis.attack = 'infinite';\n\t\t\tthis.isAdmin = true;\n\t\t\tthis.class = 'Advanced';\n\t\t}\n\t}\n\n\tclass EliteFaang extends AdvancedFaang {\n\t\tconstructor(\n\t\t\tname,\n\t\t\thealth,\n\t\t\tattack,\n\t\t\tdefense,\n\t\t\tregeneration,\n\t\t\tspeed,\n\t\t\trank,\n\t\t\tpedigree,\n\t\t\tspecies\n\t\t) {\n\t\t\tsuper(\n\t\t\t\tname,\n\t\t\t\thealth,\n\t\t\t\tattack,\n\t\t\t\tdefense,\n\t\t\t\tregeneration,\n\t\t\t\tspeed,\n\t\t\t\trank,\n\t\t\t\tpedigree,\n\t\t\t\tspecies\n\t\t\t);\n\t\t\tthis.class = 'Elite';\n\t\t}\n\t}\n\n\t// FAANG GENERATOR\n\tlet basicUnits = faang.basic;\n\tlet advancedUnits = faang.advanced;\n\tlet eliteUnits = faang.elite;\n\n\t// RANDOM UNIT GENERATOR THAT PUSHES THE UNITS INTO THE UNIT POOL\n\tfunction generateRandomUnit(rank) {\n\t\tlet length = Object.keys(rank).length;\n\t\tlet randomNumber = Math.floor(Math.random() * length);\n\t\tlet randomUnit = rank[Object.keys(rank)[randomNumber]];\n\t\tlet percentChance = Math.floor(Math.random() * 100);\n\t\trandomUnit.name =\n\t\t\trandomNames[Math.floor(Math.random() * randomNames.length)];\n\n\t\tif (rank.dra.rank === 'Basic') {\n\t\t\tif (percentChance <= 95) {\n\t\t\t\trandomUnit.pedigree =\n\t\t\t\t\tpedigree.commonLevelOne[\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\tMath.random() * pedigree.commonLevelOne.length\n\t\t\t\t\t\t)\n\t\t\t\t\t];\n\t\t\t} else {\n\t\t\t\trandomUnit.pedigree =\n\t\t\t\t\tpedigree.specialLevelOne[\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\tMath.random() * pedigree.specialLevelOne.length\n\t\t\t\t\t\t)\n\t\t\t\t\t];\n\t\t\t}\n\t\t\tunitPool.push(\n\t\t\t\tnew BasicFaang(\n\t\t\t\t\trandomUnit.name,\n\t\t\t\t\trandomUnit.health,\n\t\t\t\t\trandomUnit.attack,\n\t\t\t\t\trandomUnit.defense,\n\t\t\t\t\trandomUnit.regeneration,\n\t\t\t\t\trandomUnit.speed,\n\t\t\t\t\trandomUnit.rank,\n\t\t\t\t\trandomUnit.pedigree,\n\t\t\t\t\trandomUnit.species\n\t\t\t\t)\n\t\t\t);\n\t\t} else if (rank.dra.rank === 'Advanced') {\n\t\t\tif (percentChance <= 95) {\n\t\t\t\trandomUnit.pedigree =\n\t\t\t\t\tpedigree.commonLevelTwo[\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\tMath.random() * pedigree.commonLevelTwo.length\n\t\t\t\t\t\t)\n\t\t\t\t\t];\n\t\t\t} else {\n\t\t\t\trandomUnit.pedigree =\n\t\t\t\t\tpedigree.specialLevelTwo[\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\tMath.random() * pedigree.specialLevelTwo.length\n\t\t\t\t\t\t)\n\t\t\t\t\t];\n\t\t\t}\n\t\t\tunitPool.push(\n\t\t\t\tnew AdvancedFaang(\n\t\t\t\t\trandomUnit.name,\n\t\t\t\t\trandomUnit.health,\n\t\t\t\t\trandomUnit.attack,\n\t\t\t\t\trandomUnit.defense,\n\t\t\t\t\trandomUnit.regeneration,\n\t\t\t\t\trandomUnit.speed,\n\t\t\t\t\trandomUnit.rank,\n\t\t\t\t\trandomUnit.pedigree,\n\t\t\t\t\trandomUnit.species\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\tif (percentChance <= 95) {\n\t\t\t\trandomUnit.pedigree =\n\t\t\t\t\tpedigree.commonLevelThree[\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\tMath.random() * pedigree.commonLevelThree.length\n\t\t\t\t\t\t)\n\t\t\t\t\t];\n\t\t\t} else {\n\t\t\t\trandomUnit.pedigree =\n\t\t\t\t\tpedigree.specialLevelThree[\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\tMath.random() * pedigree.specialLevelThree.length\n\t\t\t\t\t\t)\n\t\t\t\t\t];\n\t\t\t}\n\t\t\tunitPool.push(\n\t\t\t\tnew EliteFaang(\n\t\t\t\t\trandomUnit.name,\n\t\t\t\t\trandomUnit.health,\n\t\t\t\t\trandomUnit.attack,\n\t\t\t\t\trandomUnit.defense,\n\t\t\t\t\trandomUnit.regeneration,\n\t\t\t\t\trandomUnit.speed,\n\t\t\t\t\trandomUnit.rank,\n\t\t\t\t\trandomUnit.pedigree,\n\t\t\t\t\trandomUnit.species\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\t// PLAYER GAME SETTINGS\n\n\tfor (let i = 0; i < armySize; i++) {\n\t\t// SELECT PERCENTAGE OF UNITS WILL HAVE WHICH CLASSES\n\t\tlet difficultyArray = [];\n\t\tif (difficulty === 'easy') {\n\t\t\tdifficultyArray = [70, 95];\n\t\t} else if (difficulty === 'normal') {\n\t\t\tdifficultyArray = [60, 90];\n\t\t} else if (difficulty === 'veteran') {\n\t\t\tdifficultyArray = [40, 70];\n\t\t} else if (difficulty === 'insane') {\n\t\t\tdifficultyArray = [20, 50];\n\t\t}\n\n\t\t// SELECT HOW MANY UNITS WILL BE CREATED\n\t\tlet percentChance = Math.floor(Math.random() * 100);\n\t\tif (percentChance < difficultyArray[0]) {\n\t\t\tgenerateRandomUnit(basicUnits);\n\t\t} else if (percentChance < difficultyArray[1]) {\n\t\t\tgenerateRandomUnit(advancedUnits);\n\t\t} else {\n\t\t\tgenerateRandomUnit(eliteUnits);\n\t\t}\n    }\n\n    useEffect(() => {\n        setEnemyUnits(unitPool)\n    }, [])\n    \n\treturn <div></div>;\n};\n\nexport default EnemyFaangs;","/Users/esquire/code/projects/enter-the-faang/league/src/Data/PlayerKingdoms.js",["67"],"import React, { useEffect } from 'react';\n\nconst PlayerKingdoms = ({ setPlayerKingdoms, playerTeam }) => {\n\tclass Kingdom {\n\t\tconstructor(name, health, defense, regeneration) {\n\t\t\tthis.name = name;\n\t\t\tthis.health = health;\n\t\t\tthis.defense = defense;\n\t\t\tthis.regeneration = regeneration;\n\t\t}\n\t}\n\n\tconst fireKingdom = new Kingdom(\n\t\t'Fire Kingdom',\n\t\tplayerTeam[0].health * 3,\n\t\tplayerTeam[0].defense,\n\t\tplayerTeam[0].regeneration\n\t);\n\n\tconst waterKingdom = new Kingdom(\n\t\t'Water Kingdom',\n\t\tplayerTeam[1].health * 3,\n\t\tplayerTeam[1].defense,\n\t\tplayerTeam[1].regeneration\n\t);\n\n\tconst stoneKingdom = new Kingdom(\n\t\t'Stone Kingdom',\n\t\tplayerTeam[2].health * 3,\n\t\tplayerTeam[2].defense,\n\t\tplayerTeam[2].regeneration\n\t);\n\n\tconst airKingdom = new Kingdom(\n\t\t'Air Kingdom',\n\t\tplayerTeam[3].health * 3,\n\t\tplayerTeam[3].defense,\n\t\tplayerTeam[3].regeneration\n\t);\n\n\tconst lightningKingdom = new Kingdom(\n\t\t'Lightning Kingdom',\n\t\tplayerTeam[4].health * 3,\n\t\tplayerTeam[4].defense,\n\t\tplayerTeam[4].regeneration\n\t);\n\n\tconst terraKingdom = new Kingdom(\n\t\t'Terra Kingdom',\n\t\tplayerTeam[5].health * 3,\n\t\tplayerTeam[5].defense,\n\t\tplayerTeam[5].regeneration\n\t);\n\n\tconst metalKingdom = new Kingdom(\n\t\t'Metal Kingdom',\n\t\tplayerTeam[6].health * 3,\n\t\tplayerTeam[6].defense,\n\t\tplayerTeam[6].regeneration\n\t);\n\n\tuseEffect(() => {\n\t\tsetPlayerKingdoms([\n\t\t\tfireKingdom,\n\t\t\twaterKingdom,\n\t\t\tstoneKingdom,\n\t\t\tairKingdom,\n\t\t\tlightningKingdom,\n\t\t\tterraKingdom,\n\t\t\tmetalKingdom,\n\t\t]);\n\t}, []);\n\n\treturn <div></div>;\n};\n\nexport default PlayerKingdoms;\n","/Users/esquire/code/projects/enter-the-faang/league/src/Pages/GameBoard/GameBoard.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/components/EnemyField/EnemyField.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/components/PlayerField/PlayerField.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/components/KingdomField/KingdomField.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":16,"column":9,"nodeType":"74","messageId":"75","endLine":16,"endColumn":20},{"ruleId":"72","severity":1,"message":"76","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":14},{"ruleId":"77","severity":1,"message":"78","line":252,"column":7,"nodeType":"79","endLine":252,"endColumn":9,"suggestions":"80"},{"ruleId":"77","severity":1,"message":"81","line":231,"column":8,"nodeType":"79","endLine":231,"endColumn":10,"suggestions":"82"},{"ruleId":"77","severity":1,"message":"83","line":72,"column":5,"nodeType":"79","endLine":72,"endColumn":7,"suggestions":"84"},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'gameStarted' is assigned a value but never used.","Identifier","unusedVar","'styled' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'airTitan', 'fireTitan', 'lightningTitan', 'metalTitan', 'setPlayerTeam', 'stoneTitan', 'terraTitan', and 'waterTitan'. Either include them or remove the dependency array. If 'setPlayerTeam' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["87"],"React Hook useEffect has missing dependencies: 'setEnemyUnits' and 'unitPool'. Either include them or remove the dependency array. If 'setEnemyUnits' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["88"],"React Hook useEffect has missing dependencies: 'airKingdom', 'fireKingdom', 'lightningKingdom', 'metalKingdom', 'setPlayerKingdoms', 'stoneKingdom', 'terraKingdom', and 'waterKingdom'. Either include them or remove the dependency array. If 'setPlayerKingdoms' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["89"],"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},"Update the dependencies array to be: [airTitan, fireTitan, lightningTitan, metalTitan, setPlayerTeam, stoneTitan, terraTitan, waterTitan]",{"range":"96","text":"97"},"Update the dependencies array to be: [setEnemyUnits, unitPool]",{"range":"98","text":"99"},"Update the dependencies array to be: [airKingdom, fireKingdom, lightningKingdom, metalKingdom, setPlayerKingdoms, stoneKingdom, terraKingdom, waterKingdom]",{"range":"100","text":"101"},[7020,7022],"[airTitan, fireTitan, lightningTitan, metalTitan, setPlayerTeam, stoneTitan, terraTitan, waterTitan]",[4797,4799],"[setEnemyUnits, unitPool]",[1455,1457],"[airKingdom, fireKingdom, lightningKingdom, metalKingdom, setPlayerKingdoms, stoneKingdom, terraKingdom, waterKingdom]"]