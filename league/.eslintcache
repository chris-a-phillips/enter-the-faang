[{"/Users/esquire/code/projects/enter-the-faang/league/src/index.js":"1","/Users/esquire/code/projects/enter-the-faang/league/src/App.js":"2","/Users/esquire/code/projects/enter-the-faang/league/src/SCApp.js":"3","/Users/esquire/code/projects/enter-the-faang/league/src/Data/Turn.js":"4","/Users/esquire/code/projects/enter-the-faang/league/src/Data/Unit.js":"5","/Users/esquire/code/projects/enter-the-faang/league/src/Data/FaangStats.js":"6","/Users/esquire/code/projects/enter-the-faang/league/src/Pages/WelcomeScreen/WelcomeScreen.js":"7","/Users/esquire/code/projects/enter-the-faang/league/src/Data/PlayerUnits.js":"8","/Users/esquire/code/projects/enter-the-faang/league/src/Data/EnemyUnits.js":"9","/Users/esquire/code/projects/enter-the-faang/league/src/Data/PlayerKingdoms.js":"10","/Users/esquire/code/projects/enter-the-faang/league/src/Pages/GameBoard/GameBoard.js":"11","/Users/esquire/code/projects/enter-the-faang/league/src/components/EnemyField/EnemyField.js":"12","/Users/esquire/code/projects/enter-the-faang/league/src/components/PlayerField/PlayerField.js":"13","/Users/esquire/code/projects/enter-the-faang/league/src/components/KingdomField/KingdomField.js":"14","/Users/esquire/code/projects/enter-the-faang/league/src/components/KingdomField/SCKingdomField.js":"15","/Users/esquire/code/projects/enter-the-faang/league/src/components/PlayerField/SCPlayerField.js":"16","/Users/esquire/code/projects/enter-the-faang/league/src/components/EnemyField/SCEnemyField.js":"17","/Users/esquire/code/projects/enter-the-faang/league/src/components/GameContext.js":"18"},{"size":258,"mtime":1610039923597,"results":"19","hashOfConfig":"20"},{"size":3232,"mtime":1610593152214,"results":"21","hashOfConfig":"20"},{"size":135,"mtime":1610042728229,"results":"22","hashOfConfig":"20"},{"size":187,"mtime":1610575219097,"results":"23","hashOfConfig":"20"},{"size":1107,"mtime":1610484726713,"results":"24","hashOfConfig":"20"},{"size":9324,"mtime":1610484726711,"results":"25","hashOfConfig":"20"},{"size":1198,"mtime":1610484726716,"results":"26","hashOfConfig":"20"},{"size":7591,"mtime":1610593320278,"results":"27","hashOfConfig":"20"},{"size":4829,"mtime":1610588775318,"results":"28","hashOfConfig":"20"},{"size":1914,"mtime":1610593120261,"results":"29","hashOfConfig":"20"},{"size":2834,"mtime":1610593999043,"results":"30","hashOfConfig":"20"},{"size":1054,"mtime":1610587391093,"results":"31","hashOfConfig":"20"},{"size":1496,"mtime":1610593832144,"results":"32","hashOfConfig":"20"},{"size":1403,"mtime":1610587475710,"results":"33","hashOfConfig":"20"},{"size":514,"mtime":1610496277716,"results":"34","hashOfConfig":"20"},{"size":463,"mtime":1610498761022,"results":"35","hashOfConfig":"20"},{"size":423,"mtime":1610496299858,"results":"36","hashOfConfig":"20"},{"size":171,"mtime":1610568390484,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"oulkl",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/esquire/code/projects/enter-the-faang/league/src/index.js",[],["78","79"],"/Users/esquire/code/projects/enter-the-faang/league/src/App.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/SCApp.js",["80"],"/Users/esquire/code/projects/enter-the-faang/league/src/Data/Turn.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/Data/Unit.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/Data/FaangStats.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/Pages/WelcomeScreen/WelcomeScreen.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/Data/PlayerUnits.js",["81"],"/Users/esquire/code/projects/enter-the-faang/league/src/Data/EnemyUnits.js",["82"],"import React, { useEffect } from 'react';\nimport { pedigree, faang, randomNames } from './FaangStats';\n\nconst EnemyFaangs = ({ difficulty, armySize, setEnemyUnits }) => {\n    const unitPool = []\n\n\tclass BasicFaang {\n\t\tconstructor(\n\t\t\tname,\n\t\t\thealth,\n\t\t\tattack,\n\t\t\tdefense,\n\t\t\tregeneration,\n\t\t\tspeed,\n\t\t\trank,\n\t\t\tpedigree,\n\t\t\tspecies\n\t\t) {\n\t\t\t// specs\n\t\t\tthis.isAlive = true;\n\t\t\tthis.rank = rank;\n\t\t\tthis.pedigree = pedigree;\n\t\t\tthis.species = species;\n\t\t\t// stats\n\t\t\tthis.name = name;\n\t\t\tthis.health = health;\n\t\t\tthis.attack = attack;\n\t\t\tthis.defense = defense;\n\t\t\tthis.regeneration = regeneration;\n\t\t\tthis.speed = speed;\n\t\t}\n\t\tspeak() {\n\t\t\tconsole.log(this.name);\n\t\t}\n\t\tattackUnit(unit) {\n\t\t\tconsole.log(\n\t\t\t\t`${this.name} attacked ${unit.name} and now it has ${unit.health}`\n\t\t\t);\n\t\t\tunit.health -= this.attack;\n\t\t}\n\t}\n\n\tclass AdvancedFaang extends BasicFaang {\n\t\tconstructor(\n\t\t\tname,\n\t\t\thealth,\n\t\t\tattack,\n\t\t\tdefense,\n\t\t\tregeneration,\n\t\t\tspeed,\n\t\t\trank,\n\t\t\tpedigree,\n\t\t\tspecies\n\t\t) {\n\t\t\tsuper(\n\t\t\t\tname,\n\t\t\t\thealth,\n\t\t\t\tattack,\n\t\t\t\tdefense,\n\t\t\t\tregeneration,\n\t\t\t\tspeed,\n\t\t\t\trank,\n\t\t\t\tpedigree,\n\t\t\t\tspecies\n\t\t\t);\n\t\t\tthis.isAdmin = true;\n\t\t\tthis.class = 'Advanced';\n\t\t}\n\t}\n\n\tclass EliteFaang extends AdvancedFaang {\n\t\tconstructor(\n\t\t\tname,\n\t\t\thealth,\n\t\t\tattack,\n\t\t\tdefense,\n\t\t\tregeneration,\n\t\t\tspeed,\n\t\t\trank,\n\t\t\tpedigree,\n\t\t\tspecies\n\t\t) {\n\t\t\tsuper(\n\t\t\t\tname,\n\t\t\t\thealth,\n\t\t\t\tattack,\n\t\t\t\tdefense,\n\t\t\t\tregeneration,\n\t\t\t\tspeed,\n\t\t\t\trank,\n\t\t\t\tpedigree,\n\t\t\t\tspecies\n\t\t\t);\n\t\t\tthis.class = 'Elite';\n\t\t}\n\t}\n\n\t// FAANG GENERATOR\n\tlet basicUnits = faang.basic;\n\tlet advancedUnits = faang.advanced;\n\tlet eliteUnits = faang.elite;\n\n\t// RANDOM UNIT GENERATOR THAT PUSHES THE UNITS INTO THE UNIT POOL\n\tfunction generateRandomUnit(rank) {\n\t\tlet length = Object.keys(rank).length;\n\t\tlet randomNumber = Math.floor(Math.random() * length);\n\t\tlet randomUnit = rank[Object.keys(rank)[randomNumber]];\n\t\tlet percentChance = Math.floor(Math.random() * 100);\n\t\trandomUnit.name =\n\t\t\trandomNames[Math.floor(Math.random() * randomNames.length)];\n\n\t\tif (rank.dra.rank === 'Basic') {\n\t\t\tif (percentChance <= 95) {\n\t\t\t\trandomUnit.pedigree =\n\t\t\t\t\tpedigree.commonLevelOne[\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\tMath.random() * pedigree.commonLevelOne.length\n\t\t\t\t\t\t)\n\t\t\t\t\t];\n\t\t\t} else {\n\t\t\t\trandomUnit.pedigree =\n\t\t\t\t\tpedigree.specialLevelOne[\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\tMath.random() * pedigree.specialLevelOne.length\n\t\t\t\t\t\t)\n\t\t\t\t\t];\n\t\t\t}\n\t\t\tunitPool.push(\n\t\t\t\tnew BasicFaang(\n\t\t\t\t\trandomUnit.name,\n\t\t\t\t\trandomUnit.health,\n\t\t\t\t\trandomUnit.attack,\n\t\t\t\t\trandomUnit.defense,\n\t\t\t\t\trandomUnit.regeneration,\n\t\t\t\t\trandomUnit.speed,\n\t\t\t\t\trandomUnit.rank,\n\t\t\t\t\trandomUnit.pedigree,\n\t\t\t\t\trandomUnit.species\n\t\t\t\t)\n\t\t\t);\n\t\t} else if (rank.dra.rank === 'Advanced') {\n\t\t\tif (percentChance <= 95) {\n\t\t\t\trandomUnit.pedigree =\n\t\t\t\t\tpedigree.commonLevelTwo[\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\tMath.random() * pedigree.commonLevelTwo.length\n\t\t\t\t\t\t)\n\t\t\t\t\t];\n\t\t\t} else {\n\t\t\t\trandomUnit.pedigree =\n\t\t\t\t\tpedigree.specialLevelTwo[\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\tMath.random() * pedigree.specialLevelTwo.length\n\t\t\t\t\t\t)\n\t\t\t\t\t];\n\t\t\t}\n\t\t\tunitPool.push(\n\t\t\t\tnew AdvancedFaang(\n\t\t\t\t\trandomUnit.name,\n\t\t\t\t\trandomUnit.health,\n\t\t\t\t\trandomUnit.attack,\n\t\t\t\t\trandomUnit.defense,\n\t\t\t\t\trandomUnit.regeneration,\n\t\t\t\t\trandomUnit.speed,\n\t\t\t\t\trandomUnit.rank,\n\t\t\t\t\trandomUnit.pedigree,\n\t\t\t\t\trandomUnit.species\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\tif (percentChance <= 95) {\n\t\t\t\trandomUnit.pedigree =\n\t\t\t\t\tpedigree.commonLevelThree[\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\tMath.random() * pedigree.commonLevelThree.length\n\t\t\t\t\t\t)\n\t\t\t\t\t];\n\t\t\t} else {\n\t\t\t\trandomUnit.pedigree =\n\t\t\t\t\tpedigree.specialLevelThree[\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\tMath.random() * pedigree.specialLevelThree.length\n\t\t\t\t\t\t)\n\t\t\t\t\t];\n\t\t\t}\n\t\t\tunitPool.push(\n\t\t\t\tnew EliteFaang(\n\t\t\t\t\trandomUnit.name,\n\t\t\t\t\trandomUnit.health,\n\t\t\t\t\trandomUnit.attack,\n\t\t\t\t\trandomUnit.defense,\n\t\t\t\t\trandomUnit.regeneration,\n\t\t\t\t\trandomUnit.speed,\n\t\t\t\t\trandomUnit.rank,\n\t\t\t\t\trandomUnit.pedigree,\n\t\t\t\t\trandomUnit.species\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\t// PLAYER GAME SETTINGS\n\n\tfor (let i = 0; i < armySize; i++) {\n\t\t// SELECT PERCENTAGE OF UNITS WILL HAVE WHICH CLASSES\n\t\tlet difficultyArray = [];\n\t\tif (difficulty === 'easy') {\n\t\t\tdifficultyArray = [70, 95];\n\t\t} else if (difficulty === 'normal') {\n\t\t\tdifficultyArray = [60, 90];\n\t\t} else if (difficulty === 'veteran') {\n\t\t\tdifficultyArray = [40, 70];\n\t\t} else if (difficulty === 'insane') {\n\t\t\tdifficultyArray = [20, 50];\n\t\t}\n\n\t\t// SELECT HOW MANY UNITS WILL BE CREATED\n\t\tlet percentChance = Math.floor(Math.random() * 100);\n\t\tif (percentChance < difficultyArray[0]) {\n\t\t\tgenerateRandomUnit(basicUnits);\n\t\t} else if (percentChance < difficultyArray[1]) {\n\t\t\tgenerateRandomUnit(advancedUnits);\n\t\t} else {\n\t\t\tgenerateRandomUnit(eliteUnits);\n\t\t}\n    }\n\n    useEffect(() => {\n        setEnemyUnits(unitPool)\n    }, [])\n    \n\treturn <div></div>;\n};\n\nexport default EnemyFaangs;","/Users/esquire/code/projects/enter-the-faang/league/src/Data/PlayerKingdoms.js",["83"],"import React, { useEffect } from 'react';\n\nconst PlayerKingdoms = ({ setPlayerKingdoms, kingdomTemplate }) => {\n\n\tconsole.log(kingdomTemplate)\n\tclass Kingdom {\n\t\tconstructor(name, health, defense, regeneration, showcase) {\n\t\t\tthis.name = name;\n\t\t\tthis.health = health;\n\t\t\tthis.defense = defense;\n\t\t\tthis.regeneration = regeneration;\n\t\t\tthis.showcase = showcase;\n\t\t}\n\t}\n\n\tconst fireKingdom = new Kingdom(\n\t\t'Fire Kingdom',\n\t\tkingdomTemplate[0].health * 3,\n\t\tkingdomTemplate[0].defense,\n\t\tkingdomTemplate[0].regeneration,\n\t\tkingdomTemplate[0].showcase\n\t);\n\n\tconst waterKingdom = new Kingdom(\n\t\t'Water Kingdom',\n\t\tkingdomTemplate[1].health * 3,\n\t\tkingdomTemplate[1].defense,\n\t\tkingdomTemplate[1].regeneration,\n\t\tkingdomTemplate[1].showcase\n\t);\n\n\tconst stoneKingdom = new Kingdom(\n\t\t'Stone Kingdom',\n\t\tkingdomTemplate[2].health * 3,\n\t\tkingdomTemplate[2].defense,\n\t\tkingdomTemplate[2].regeneration,\n\t\tkingdomTemplate[2].showcase\n\t);\n\n\tconst airKingdom = new Kingdom(\n\t\t'Air Kingdom',\n\t\tkingdomTemplate[3].health * 3,\n\t\tkingdomTemplate[3].defense,\n\t\tkingdomTemplate[3].regeneration,\n\t\tkingdomTemplate[3].showcase\n\t);\n\n\tconst lightningKingdom = new Kingdom(\n\t\t'Lightning Kingdom',\n\t\tkingdomTemplate[4].health * 3,\n\t\tkingdomTemplate[4].defense,\n\t\tkingdomTemplate[4].regeneration,\n\t\tkingdomTemplate[4].showcase\n\t);\n\n\tconst terraKingdom = new Kingdom(\n\t\t'Terra Kingdom',\n\t\tkingdomTemplate[5].health * 3,\n\t\tkingdomTemplate[5].defense,\n\t\tkingdomTemplate[5].regeneration,\n\t\tkingdomTemplate[5].showcase\n\t);\n\n\tconst metalKingdom = new Kingdom(\n\t\t'Metal Kingdom',\n\t\tkingdomTemplate[6].health * 3,\n\t\tkingdomTemplate[6].defense,\n\t\tkingdomTemplate[6].regeneration,\n\t\tkingdomTemplate[6].showcase\n\t);\n\n\tuseEffect(() => {\n\t\tsetPlayerKingdoms([\n\t\t\tfireKingdom,\n\t\t\twaterKingdom,\n\t\t\tstoneKingdom,\n\t\t\tairKingdom,\n\t\t\tlightningKingdom,\n\t\t\tterraKingdom,\n\t\t\tmetalKingdom,\n\t\t]);\n\t}, []);\n\n\treturn <div></div>;\n};\n\nexport default PlayerKingdoms;\n","/Users/esquire/code/projects/enter-the-faang/league/src/Pages/GameBoard/GameBoard.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/components/EnemyField/EnemyField.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/components/PlayerField/PlayerField.js",["84","85"],"import React, { useState, useEffect, useContext } from 'react';\nimport { GameContext } from '../GameContext';\nimport { PlayerFieldLabel, PlayerFieldWrapper, PlayerFlexContainer, TitanContainer, TitanHealth, TitanName, TitanStats } from './SCPlayerField';\n\nconst PlayerField = ({ playerTeam, functions }) => {\n\tconst { involved, setInvolved } = useContext(GameContext);\n\tconst [activeTitans, setActiveTitans] = useState(playerTeam.slice(0, 2));\n\tfunction swap(list, activeOne, activeTwo) {\n\t\tlist[activeOne] = list.splice(activeTwo, 1, list[activeOne])[0];\n\t\tsetActiveTitans([playerTeam[0], playerTeam[1]]);\n\t\treturn list;\n\t}\n\n\tuseEffect(() => {\n\t\tconsole.log()\n\t}, [activeTitans, functions, playerTeam])\n\n\treturn (\n\t\t<PlayerFieldWrapper>\n\t\t\t<PlayerFieldLabel>Titans</PlayerFieldLabel>\n\t\t\t<PlayerFlexContainer>\n\t\t\t\t{activeTitans.map((unit) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<TitanContainer\n\t\t\t\t\t\t\tkey={unit.name}\n\t\t\t\t\t\t\tonClick={() => functions.choose(unit)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<TitanName>{unit.name}</TitanName>\n\t\t\t\t\t\t\t<TitanHealth>{unit.health}</TitanHealth>\n\t\t\t\t\t\t\t<TitanStats>\n\t\t\t\t\t\t\t\t<p>{unit.kingdom}</p>\n\t\t\t\t\t\t\t</TitanStats>\n\t\t\t\t\t\t\t<button onClick={() => functions.select(unit)}>attack</button>\n\t\t\t\t\t\t</TitanContainer>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t<button onClick={() => swap(playerTeam, 0, 4)}>swap</button>\n\t\t\t\t{/* <button onClick={test}>console log next click</button> */}\n\t\t\t</PlayerFlexContainer>\n\t\t\t{playerTeam.slice(2).map((unit) => unit.name)}\n\t\t</PlayerFieldWrapper>\n\t);\n};\n\nexport default PlayerField;","/Users/esquire/code/projects/enter-the-faang/league/src/components/KingdomField/KingdomField.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/components/KingdomField/SCKingdomField.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/components/PlayerField/SCPlayerField.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/components/EnemyField/SCEnemyField.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/components/GameContext.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":1,"column":8,"nodeType":"92","messageId":"93","endLine":1,"endColumn":14},{"ruleId":"94","severity":1,"message":"95","line":275,"column":7,"nodeType":"96","endLine":275,"endColumn":9,"suggestions":"97"},{"ruleId":"94","severity":1,"message":"98","line":230,"column":8,"nodeType":"96","endLine":230,"endColumn":10,"suggestions":"99"},{"ruleId":"94","severity":1,"message":"100","line":82,"column":5,"nodeType":"96","endLine":82,"endColumn":7,"suggestions":"101"},{"ruleId":"90","severity":1,"message":"102","line":6,"column":10,"nodeType":"92","messageId":"93","endLine":6,"endColumn":18},{"ruleId":"90","severity":1,"message":"103","line":6,"column":20,"nodeType":"92","messageId":"93","endLine":6,"endColumn":31},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'airTitan', 'fireTitan', 'lightningTitan', 'metalTitan', 'setKingdomTemplate', 'setPlayerTeam', 'stoneTitan', 'terraTitan', and 'waterTitan'. Either include them or remove the dependency array. If 'setPlayerTeam' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["106"],"React Hook useEffect has missing dependencies: 'setEnemyUnits' and 'unitPool'. Either include them or remove the dependency array. If 'setEnemyUnits' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["107"],"React Hook useEffect has missing dependencies: 'airKingdom', 'fireKingdom', 'lightningKingdom', 'metalKingdom', 'setPlayerKingdoms', 'stoneKingdom', 'terraKingdom', and 'waterKingdom'. Either include them or remove the dependency array. If 'setPlayerKingdoms' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["108"],"'involved' is assigned a value but never used.","'setInvolved' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [airTitan, fireTitan, lightningTitan, metalTitan, setKingdomTemplate, setPlayerTeam, stoneTitan, terraTitan, waterTitan]",{"range":"115","text":"116"},"Update the dependencies array to be: [setEnemyUnits, unitPool]",{"range":"117","text":"118"},"Update the dependencies array to be: [airKingdom, fireKingdom, lightningKingdom, metalKingdom, setPlayerKingdoms, stoneKingdom, terraKingdom, waterKingdom]",{"range":"119","text":"120"},[7521,7523],"[airTitan, fireTitan, lightningTitan, metalTitan, setKingdomTemplate, setPlayerTeam, stoneTitan, terraTitan, waterTitan]",[4768,4770],"[setEnemyUnits, unitPool]",[1852,1854],"[airKingdom, fireKingdom, lightningKingdom, metalKingdom, setPlayerKingdoms, stoneKingdom, terraKingdom, waterKingdom]"]