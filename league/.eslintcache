[{"/Users/esquire/code/projects/enter-the-faang/league/src/index.js":"1","/Users/esquire/code/projects/enter-the-faang/league/src/App.js":"2","/Users/esquire/code/projects/enter-the-faang/league/src/SCApp.js":"3","/Users/esquire/code/projects/enter-the-faang/league/src/Data/Unit.js":"4","/Users/esquire/code/projects/enter-the-faang/league/src/Data/FaangStats.js":"5","/Users/esquire/code/projects/enter-the-faang/league/src/Pages/WelcomeScreen/WelcomeScreen.js":"6","/Users/esquire/code/projects/enter-the-faang/league/src/Data/PlayerUnits.js":"7","/Users/esquire/code/projects/enter-the-faang/league/src/Data/EnemyUnits.js":"8","/Users/esquire/code/projects/enter-the-faang/league/src/Data/PlayerKingdoms.js":"9","/Users/esquire/code/projects/enter-the-faang/league/src/Pages/GameBoard/GameBoard.js":"10","/Users/esquire/code/projects/enter-the-faang/league/src/components/EnemyField/EnemyField.js":"11","/Users/esquire/code/projects/enter-the-faang/league/src/components/PlayerField/PlayerField.js":"12","/Users/esquire/code/projects/enter-the-faang/league/src/components/KingdomField/KingdomField.js":"13","/Users/esquire/code/projects/enter-the-faang/league/src/components/KingdomField/SCKingdomField.js":"14","/Users/esquire/code/projects/enter-the-faang/league/src/components/PlayerField/SCPlayerField.js":"15","/Users/esquire/code/projects/enter-the-faang/league/src/components/EnemyField/SCEnemyField.js":"16","/Users/esquire/code/projects/enter-the-faang/league/src/Data/SessionLogic.js":"17","/Users/esquire/code/projects/enter-the-faang/league/src/components/GameContext.js":"18","/Users/esquire/code/projects/enter-the-faang/league/src/Data/Cards.js":"19","/Users/esquire/code/projects/enter-the-faang/league/src/Pages/GameBoard/SCGameBoard.js":"20","/Users/esquire/code/projects/enter-the-faang/league/src/components/GameRules/GameRules.js":"21","/Users/esquire/code/projects/enter-the-faang/league/src/components/GameRules/SCGameRules.js":"22","/Users/esquire/code/projects/enter-the-faang/league/src/components/SessionInfo/SessionInfo.js":"23"},{"size":236,"mtime":1612132713936,"results":"24","hashOfConfig":"25"},{"size":2491,"mtime":1612581501275,"results":"26","hashOfConfig":"25"},{"size":191,"mtime":1611804813367,"results":"27","hashOfConfig":"25"},{"size":1107,"mtime":1610484726713,"results":"28","hashOfConfig":"25"},{"size":9315,"mtime":1611609709189,"results":"29","hashOfConfig":"25"},{"size":1244,"mtime":1613625987385,"results":"30","hashOfConfig":"25"},{"size":9025,"mtime":1613625939396,"results":"31","hashOfConfig":"25"},{"size":9491,"mtime":1613625902360,"results":"32","hashOfConfig":"25"},{"size":2873,"mtime":1613625925886,"results":"33","hashOfConfig":"25"},{"size":12628,"mtime":1613627198418,"results":"34","hashOfConfig":"25"},{"size":1550,"mtime":1613625805339,"results":"35","hashOfConfig":"25"},{"size":3375,"mtime":1613625880249,"results":"36","hashOfConfig":"25"},{"size":2600,"mtime":1613625867882,"results":"37","hashOfConfig":"25"},{"size":1998,"mtime":1613624923027,"results":"38","hashOfConfig":"25"},{"size":2891,"mtime":1612581501289,"results":"39","hashOfConfig":"25"},{"size":1682,"mtime":1612581501286,"results":"40","hashOfConfig":"25"},{"size":9765,"mtime":1613261658610,"results":"41","hashOfConfig":"25"},{"size":86,"mtime":1610826572545,"results":"42","hashOfConfig":"25"},{"size":7164,"mtime":1612581501276,"results":"43","hashOfConfig":"25"},{"size":2213,"mtime":1613261658612,"results":"44","hashOfConfig":"25"},{"size":1719,"mtime":1613625851456,"results":"45","hashOfConfig":"25"},{"size":1148,"mtime":1613622984563,"results":"46","hashOfConfig":"25"},{"size":707,"mtime":1613627583668,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"oulkl",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/esquire/code/projects/enter-the-faang/league/src/index.js",[],["99","100"],"/Users/esquire/code/projects/enter-the-faang/league/src/App.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/SCApp.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/Data/Unit.js",[],["101","102"],"/Users/esquire/code/projects/enter-the-faang/league/src/Data/FaangStats.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/Pages/WelcomeScreen/WelcomeScreen.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/Data/PlayerUnits.js",["103"],"/Users/esquire/code/projects/enter-the-faang/league/src/Data/EnemyUnits.js",["104"],"/Users/esquire/code/projects/enter-the-faang/league/src/Data/PlayerKingdoms.js",["105"],"/Users/esquire/code/projects/enter-the-faang/league/src/Pages/GameBoard/GameBoard.js",["106","107","108"],"/Users/esquire/code/projects/enter-the-faang/league/src/components/EnemyField/EnemyField.js",["109","110"],"import React, { useState, useEffect } from 'react';\n\nimport {\n\tEnemyFieldWrapper,\n\tEnemyFieldLabel,\n\tEnemyFlexContainer,\n\tFaangContainer,\n\tFaangName,\n\tHealthBar,\n\tHealthBarContainer,\n\tFaangHeader,\n\tFaangContent,\n\tEnemyRank,\n} from './SCEnemyField';\n\nfunction EnemyField({ enemyUnits, functions }) {\n\tconst [enemyInfo, setEnemyInfo] = useState('');\n\n\tuseEffect(() => {}, [enemyUnits]);\n\n\treturn (\n\t\t<EnemyFieldWrapper>\n\t\t\t<EnemyFieldLabel>\n\t\t\t\t<h3>Enemies Remaining: {enemyUnits.length}</h3>\n\t\t\t</EnemyFieldLabel>\n\t\t\t<EnemyFlexContainer>\n\t\t\t\t{enemyUnits.slice(0, 5).map((unit) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<FaangContainer\n\t\t\t\t\t\t\tunit={unit}\n\t\t\t\t\t\t\tkey={enemyUnits.indexOf(unit)}\n\t\t\t\t\t\t\tonClick={() => functions.choose(unit)}>\n\t\t\t\t\t\t\t<FaangContent unit={unit}>\n\t\t\t\t\t\t\t\t<FaangHeader unit={unit}>\n\t\t\t\t\t\t\t\t\t<FaangName>\n\t\t\t\t\t\t\t\t\t\t<h4>{unit.pedigree}</h4>\n\t\t\t\t\t\t\t\t\t\t<h4>{unit.name}</h4>\n\t\t\t\t\t\t\t\t\t</FaangName>\n\t\t\t\t\t\t\t\t</FaangHeader>\n\t\t\t\t\t\t\t\t<HealthBarContainer unit={unit}>\n\t\t\t\t\t\t\t\t\t<HealthBar\n\t\t\t\t\t\t\t\t\t\tunit={unit}\n\t\t\t\t\t\t\t\t\t\tpercent={Math.ceil(\n\t\t\t\t\t\t\t\t\t\t\t(unit.currentHealth /\n\t\t\t\t\t\t\t\t\t\t\t\tunit.maxHealth) *\n\t\t\t\t\t\t\t\t\t\t\t\t100\n\t\t\t\t\t\t\t\t\t\t)}>\n\t\t\t\t\t\t\t\t\t\t{Math.ceil(\n\t\t\t\t\t\t\t\t\t\t\t(unit.currentHealth /\n\t\t\t\t\t\t\t\t\t\t\t\tunit.maxHealth) *\n\t\t\t\t\t\t\t\t\t\t\t\t100\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t%\n\t\t\t\t\t\t\t\t\t</HealthBar>\n\t\t\t\t\t\t\t\t</HealthBarContainer>\n\t\t\t\t\t\t\t</FaangContent>\n\t\t\t\t\t\t\t<EnemyRank>\n\t\t\t\t\t\t\t\t<h5>{unit.rank}</h5>\n\t\t\t\t\t\t\t\t<h5>{unit.species}</h5>\n\t\t\t\t\t\t\t</EnemyRank>\n\t\t\t\t\t\t</FaangContainer>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</EnemyFlexContainer>\n\t\t</EnemyFieldWrapper>\n\t);\n}\n\nexport default EnemyField;\n","/Users/esquire/code/projects/enter-the-faang/league/src/components/PlayerField/PlayerField.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/components/KingdomField/KingdomField.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/components/KingdomField/SCKingdomField.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/components/PlayerField/SCPlayerField.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/components/EnemyField/SCEnemyField.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/Data/SessionLogic.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/components/GameContext.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/Data/Cards.js",["111","112","113","114","115","116","117"],"import { calculations, session } from '../Data/SessionLogic'\n\nclass Card {\n    constructor(name, strength, energy) {\n        this.name = name;\n        this.strength = strength;\n        this.energy = energy;\n        this.isUsed = false;\n    }\n}\n// HEX COLORS\n// ATTACK = #FFA936, #806441\n// DEFENSE = #51A3A3, #387070\n// SUPPORT = #DD7373, #A35555\nclass AttackCard extends Card {\n\tconstructor(name, strength, energy) {\n        super(name, strength, energy);\n        // SPECIFIC TO THIS CLASS\n        this.type = 'Attack'\n        this.colors = {\n\t\t\tprimary: '#FFA936',\n\t\t\tsecondary: '#806441',\n\t\t};\n        this.description = `Deals damage to the enemy with ${this.strength} power.`;\n\t}\n\teffect(initiator, target) {\n        let percent\n        this.speed = initiator.speed\n        // IF INITIATOR HAS ENOUGH ENERGY AND HAS A VALID TARGET\n        if (initiator !== target && initiator.energy >= this.energy && initiator.isAlive) {\n\t\t\t// DO DAMAGE\n\t\t\ttarget.currentHealth -= calculations.playerDamageCalc(\n\t\t\t\tinitiator,\n\t\t\t\ttarget,\n\t\t\t\tthis.strength,\n\t\t\t\tsession\n\t\t\t);\n\t\t\t// USE THIS CARD SO IT IS SPLICED\n\t\t\tthis.isUsed = true;\n\t\t\t// SUBTRACT ENERGY COST\n\t\t\tinitiator.energy -= this.energy;\n\t\t\tif (target.currentHealth <= 0) {\n\t\t\t\ttarget.isAlive = false;\n\t\t\t}\n\t\t\t// CALCULATE PERCENTAGE FOR DISPLAY\n\t\t\tpercent = Math.ceil(\n\t\t\t\t(target.currentHealth / target.maxHealth) * 100\n\t\t\t);\n\t\t\t// IF ZENSCAPE IS FLASH ADD FLASH STATUS TO THEM\n\t\t\tif (\n\t\t\t\tsession.currentZenscape.name === 'Flash' &&\n\t\t\t\tMath.random() * 100 < session.currentZenscape.intensity\n\t\t\t) {\n\t\t\t\ttarget.status.flash = true\n\t\t\t}\n\t\t}\n        // IF INITIATOR IS TARGET CHOOSE NEW TARGET\n            if (initiator === target) {\n                console.log('CHOOSE NEW TARGET');\n            }\n            // IF INITIATOR DOES NOT HAVE ENOUGH ENERGY THIS CAN'T BE USED\n            if (initiator.energy < this.energy) {\n                console.log('THIS TITAN DOES NOT HAVE ENOUGH ENERGY');\n            }\n            // RESET ENERGY (WILL PROBABLY CHANCE)\n            initiator.energy = initiator.showcase.energy\n            // IF TARGET DIED FROM ATTACK\n            if (target.currentHealth <= 0) {\n                target.isAlive = false\n                return {\n\t\t\t\t\tevent: `card ${this.name} was used by ${initiator.name} to attack ${target.name} and it was defeated`,\n\t\t\t\t\tbgColor: initiator.showcase.colors.secondary,\n\t\t\t\t\tcolor: '#000',\n                };\n                // IF TARGET DID NOT DIE FROM THE ATTACK\n            } else return {\n\t\t\t\tevent: `card ${this.name} was used by ${initiator.name} to attack ${target.name} and now it has ${percent}% health remaining`,\n\t\t\t\tbgColor: initiator.showcase.colors.secondary,\n                color: '#000',\n                border: 'red'\n\t\t\t};\n\t}\n}\n\nclass HealCard extends Card {\n\tconstructor(name, strength, energy) {\n\t\tsuper(name, strength, energy);\n        // SPECIFIC TO THIS CLASS\n        this.type = 'Heal'\n\t\tthis.colors = {\n\t\t\tprimary: '#51A3A3',\n\t\t\tsecondary: '#387070',\n\t\t};\n        this.description = `Heals the target with ${this.strength} power.`;\n\t}\n\teffect(initiator, target) {\n        let percent\n        this.speed = initiator.speed;\n        let res = null\n        if (target.isFaang) {\n            console.log('CHOOSE NEW TARGET')\n        }\n\t\tif (initiator !== target && initiator.energy >= this.energy && !target.isFaang) {\n\t\t\tthis.isUsed = true;\n            initiator.energy -= this.energy;\n            // calculations.healCalc(initiator, target, this.strength, session)\n            if (initiator.isAlive && target.isAlive) {\n                if (\n\t\t\t\t\t(target.currentHealth +\n\t\t\t\t\t\tcalculations.healCalc(\n\t\t\t\t\t\t\tinitiator,\n\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\tthis.strength,\n\t\t\t\t\t\t\tsession\n\t\t\t\t\t\t)) >\n\t\t\t\t\ttarget.maxHealth\n\t\t\t\t) {\n\t\t\t\t\ttarget.currentHealth = target.maxHealth;\n\t\t\t\t} else {\n                    target.currentHealth += (calculations.healCalc(\n                        initiator,\n\t\t\t\t\t\ttarget,\n\t\t\t\t\t\tthis.strength,\n\t\t\t\t\t\tsession\n                        ))\n                    }\n                percent = Math.ceil(\n                    (target.currentHealth / target.maxHealth) * 100\n                );\n                res = `${initiator.name} used Card ${this.name} to heal ${target.name}, and now it has ${percent}% health remaining`\n                console.log(initiator)\n            } else res = `${initiator.name} used Card ${this.name} in an attempt to heal ${target.name}, but it was defeated before it could be healed`;\n\t\t}\n\t\tif (initiator === target) {\n\t\t\tconsole.log('CHOOSE NEW TARGET');\n\t\t}\n\t\tif (initiator.energy < this.energy) {\n\t\t\tconsole.log('THIS TITAN DOES NOT HAVE ENOUGH ENERGY');\n\t\t}\n        initiator.energy = initiator.showcase.energy;\n        console.log('INITIATOR:', initiator.showcase)\n            return {\n\t\t\t\tevent: res,\n\t\t\t\tbgColor: initiator.showcase.colors.secondary,\n                color: '#000',\n                border: 'green'\n\t\t\t};\n\t}\n}\n\nclass SupportCard extends Card {\n\tconstructor(name, type, strength, energy) {\n\t\tsuper(name, type, strength, energy);\n        // SPECIFIC TO THIS CLASS\n        this.type = 'Support'\n\t\tthis.colors = {\n\t\t\tprimary: '#DD7373',\n\t\t\tsecondary: '#A35555',\n\t\t};\n\t\tthis.description = `Heals the target with ${this.strength} power.`;\n\t}\n\teffect(initiator, target) {\n\t\tthis.speed = initiator.speed;\n\t\tif (initiator !== target && initiator.energy >= this.energy) {\n\t\t\tthis.isUsed = true\n            console.log('it works')\n\t\t}\n\n\t\tif (initiator === target) {\n\t\t\tconsole.log('CHOOSE NEW TARGET');\n\t\t}\n\t\tif (initiator.energy < this.energy) {\n\t\t\tconsole.log('THIS TITAN DOES NOT HAVE ENOUGH ENERGY');\n\t\t}\n        initiator.energy = initiator.showcase.energy;\n            return {\n                event: '======= FIGURE OUT WHAT THE SUPPORTS DO =======',\n                color: this.colors.secondary,\n            };\n\t}\n}\n\nconst aTest = new AttackCard('a test', 1, 1)\nconst aTest2 = new AttackCard('a test2', 2, 2)\nconst aTest3 = new AttackCard('a test3', 3, 3)\nconst aTest4 = new AttackCard('a test4', 4, 4)\nconst aTest5 = new AttackCard('a test5', 5, 5)\nconst aTest6 = new AttackCard('a test6', 6, 6)\nconst aTest7 = new AttackCard('a test7', 7, 7)\nconst hTest = new HealCard('h test', 1, 1)\nconst hTest2 = new HealCard('h test2', 2, 2)\nconst hTest3 = new HealCard('h test3', 3, 3)\nconst hTest4 = new HealCard('h test4', 4, 4)\nconst hTest5 = new HealCard('h test5', 5, 5)\nconst hTest6 = new HealCard('h test6', 6, 6)\nconst hTest7 = new HealCard('h test7', 7, 7)\nconst sTest = new SupportCard('s test', 1, 1)\nconst sTest2 = new SupportCard('s test2', 2, 2)\nconst sTest3 = new SupportCard('s test3', 3, 3)\nconst sTest4 = new SupportCard('s test4', 4, 4)\nconst sTest5 = new SupportCard('s test5', 5, 5)\nconst sTest6 = new SupportCard('s test6', 6, 6)\nconst sTest7 = new SupportCard('s test7', 7, 7)\n\nexport const fullDeck = [\n    // 1\n\taTest,\n    hTest,\n    // sTest,\n    // 2\n\taTest2,\n    hTest2,\n    // sTest2,\n    // 3\n\taTest3,\n    hTest3,\n    // sTest3,\n    // 4\n\taTest4,\n    hTest4,\n    // sTest4,\n    // 5\n\taTest5,\n    hTest5,\n    // sTest5,\n    // 6\n\taTest6,\n    hTest6,\n    // sTest6,\n    //7\n\taTest7,\n    hTest7,\n    // sTest7\n];\n\nexport const allCards = session.shuffle(fullDeck)","/Users/esquire/code/projects/enter-the-faang/league/src/Pages/GameBoard/SCGameBoard.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/components/GameRules/GameRules.js",["118"],"import React, { useEffect, useRef } from 'react';\nimport {\n\tCloseButton,\n\tGameRulesWrapper,\n\tLoseDiv,\n\tRulesDiv,\n\tRulesFlexContainer,\n\tRulesH3,\n\tRulesHeading,\n\tRulesLI,\n\tRulesOL,\n\tRulesP,\n\tWinDiv\n} from './SCGameRules';\nfunction GameRules ({ showRules, setShowRules }) {\n\tconst panel = useRef();\n\n\tconst handleClick = (e) => {\n\t\tif (!panel.current.contains(e.target)) {\n\t\t\tsetShowRules(!showRules);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener('mousedown', handleClick);\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('mousedown', handleClick);\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<GameRulesWrapper ref={panel}>\n\t\t\t<CloseButton onClick={() => setShowRules(false)}>&times;</CloseButton>\n\t\t\t<RulesHeading>Rules</RulesHeading>\n\t\t\t<RulesFlexContainer>\n\t\t\t\t<WinDiv>\n\t\t\t\t\t<RulesH3>Win</RulesH3>\n\t\t\t\t\t<RulesP>Defeat all the Faangs</RulesP>\n\t\t\t\t</WinDiv>\n\t\t\t\t<LoseDiv>\n\t\t\t\t\t<RulesH3>Lose</RulesH3>\n\t\t\t\t\t<RulesP>Lose all of your titans</RulesP>\n\t\t\t\t\t<RulesP>Lose all of your kingdoms</RulesP>\n\t\t\t\t</LoseDiv>\n\t\t\t</RulesFlexContainer>\n\n\t\t\t<RulesDiv>\n\t\t\t\t<RulesH3>Turns</RulesH3>\n\t\t\t\t<RulesOL>\n\t\t\t\t\t<RulesLI>\n\t\t\t\t\t\tNew random cards are added to the players' hand from the\n\t\t\t\t\t\tdeck\n\t\t\t\t\t</RulesLI>\n\t\t\t\t\t<RulesLI>\n\t\t\t\t\t\tSwap titans between active ones and reserves (optional)\n\t\t\t\t\t</RulesLI>\n\t\t\t\t\t<RulesLI>\n\t\t\t\t\t\tSelect the card, the titan to use it, and the target\n\t\t\t\t\t</RulesLI>\n\t\t\t\t\t<RulesLI>\n\t\t\t\t\t\tAfter <button>End Turn</button> button is clicked all of\n\t\t\t\t\t\tthe units take their turns according to their speed\n\t\t\t\t\t</RulesLI>\n\t\t\t\t\t<RulesLI>\n\t\t\t\t\t\tIf units are defeated, they are replaced after the\n\t\t\t\t\t\tdamage step\n\t\t\t\t\t</RulesLI>\n\t\t\t\t</RulesOL>\n\t\t\t</RulesDiv>\n\t\t</GameRulesWrapper>\n\t);\n};\n\nexport default GameRules;\n","/Users/esquire/code/projects/enter-the-faang/league/src/components/GameRules/SCGameRules.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/components/SessionInfo/SessionInfo.js",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"119","replacedBy":"123"},{"ruleId":"121","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":324,"column":7,"nodeType":"127","endLine":324,"endColumn":9,"suggestions":"128"},{"ruleId":"125","severity":1,"message":"129","line":391,"column":5,"nodeType":"127","endLine":391,"endColumn":7,"suggestions":"130"},{"ruleId":"125","severity":1,"message":"131","line":110,"column":5,"nodeType":"127","endLine":110,"endColumn":7,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":9,"column":2,"nodeType":"135","messageId":"136","endLine":9,"endColumn":16},{"ruleId":"133","severity":1,"message":"137","line":13,"column":2,"nodeType":"135","messageId":"136","endLine":13,"endColumn":16},{"ruleId":"125","severity":1,"message":"138","line":396,"column":5,"nodeType":"127","endLine":396,"endColumn":72,"suggestions":"139"},{"ruleId":"133","severity":1,"message":"140","line":17,"column":9,"nodeType":"135","messageId":"136","endLine":17,"endColumn":18},{"ruleId":"133","severity":1,"message":"141","line":17,"column":20,"nodeType":"135","messageId":"136","endLine":17,"endColumn":32},{"ruleId":"133","severity":1,"message":"142","line":197,"column":7,"nodeType":"135","messageId":"136","endLine":197,"endColumn":12},{"ruleId":"133","severity":1,"message":"143","line":198,"column":7,"nodeType":"135","messageId":"136","endLine":198,"endColumn":13},{"ruleId":"133","severity":1,"message":"144","line":199,"column":7,"nodeType":"135","messageId":"136","endLine":199,"endColumn":13},{"ruleId":"133","severity":1,"message":"145","line":200,"column":7,"nodeType":"135","messageId":"136","endLine":200,"endColumn":13},{"ruleId":"133","severity":1,"message":"146","line":201,"column":7,"nodeType":"135","messageId":"136","endLine":201,"endColumn":13},{"ruleId":"133","severity":1,"message":"147","line":202,"column":7,"nodeType":"135","messageId":"136","endLine":202,"endColumn":13},{"ruleId":"133","severity":1,"message":"148","line":203,"column":7,"nodeType":"135","messageId":"136","endLine":203,"endColumn":13},{"ruleId":"125","severity":1,"message":"149","line":30,"column":5,"nodeType":"127","endLine":30,"endColumn":7,"suggestions":"150"},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],["151"],["152"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'airTitan', 'fireTitan', 'lightningTitan', 'metalTitan', 'setPlayerTeam', 'stoneTitan', 'terraTitan', and 'waterTitan'. Either include them or remove the dependency array. If 'setPlayerTeam' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["153"],"React Hook useEffect has missing dependencies: 'setEnemyUnits' and 'unitPool'. Either include them or remove the dependency array. If 'setEnemyUnits' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["154"],"React Hook useEffect has missing dependencies: 'airKingdom', 'fireKingdom', 'lightningKingdom', 'metalKingdom', 'setPlayerKingdoms', 'stoneKingdom', 'terraKingdom', and 'waterKingdom'. Either include them or remove the dependency array. If 'setPlayerKingdoms' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["155"],"no-unused-vars","'BoardContainer' is defined but never used.","Identifier","unusedVar","'GameRulesModal' is defined but never used.","React Hook useEffect has missing dependencies: 'listUnits' and 'setAllUnitsOnField'. Either include them or remove the dependency array. If 'setAllUnitsOnField' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["156"],"'enemyInfo' is assigned a value but never used.","'setEnemyInfo' is assigned a value but never used.","'sTest' is assigned a value but never used.","'sTest2' is assigned a value but never used.","'sTest3' is assigned a value but never used.","'sTest4' is assigned a value but never used.","'sTest5' is assigned a value but never used.","'sTest6' is assigned a value but never used.","'sTest7' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleClick'. Either include it or remove the dependency array.",["157"],"no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [airTitan, fireTitan, lightningTitan, metalTitan, setPlayerTeam, stoneTitan, terraTitan, waterTitan]",{"range":"168","text":"169"},"Update the dependencies array to be: [setEnemyUnits, unitPool]",{"range":"170","text":"171"},"Update the dependencies array to be: [airKingdom, fireKingdom, lightningKingdom, metalKingdom, setPlayerKingdoms, stoneKingdom, terraKingdom, waterKingdom]",{"range":"172","text":"173"},"Update the dependencies array to be: [enemyUnits, playerTeam, playerKingdoms, session, session.eventLog, setAllUnitsOnField, listUnits]",{"range":"174","text":"175"},"Update the dependencies array to be: [handleClick]",{"range":"176","text":"177"},[8967,8969],"[airTitan, fireTitan, lightningTitan, metalTitan, setPlayerTeam, stoneTitan, terraTitan, waterTitan]",[9432,9434],"[setEnemyUnits, unitPool]",[2811,2813],"[airKingdom, fireKingdom, lightningKingdom, metalKingdom, setPlayerKingdoms, stoneKingdom, terraKingdom, waterKingdom]",[11100,11167],"[enemyUnits, playerTeam, playerKingdoms, session, session.eventLog, setAllUnitsOnField, listUnits]",[568,570],"[handleClick]"]