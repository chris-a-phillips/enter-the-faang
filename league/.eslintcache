[{"/Users/esquire/code/projects/enter-the-faang/league/src/index.js":"1","/Users/esquire/code/projects/enter-the-faang/league/src/App.js":"2","/Users/esquire/code/projects/enter-the-faang/league/src/SCApp.js":"3","/Users/esquire/code/projects/enter-the-faang/league/src/Data/Unit.js":"4","/Users/esquire/code/projects/enter-the-faang/league/src/Data/FaangStats.js":"5","/Users/esquire/code/projects/enter-the-faang/league/src/Pages/WelcomeScreen/WelcomeScreen.js":"6","/Users/esquire/code/projects/enter-the-faang/league/src/Data/PlayerUnits.js":"7","/Users/esquire/code/projects/enter-the-faang/league/src/Data/EnemyUnits.js":"8","/Users/esquire/code/projects/enter-the-faang/league/src/Data/PlayerKingdoms.js":"9","/Users/esquire/code/projects/enter-the-faang/league/src/Pages/GameBoard/GameBoard.js":"10","/Users/esquire/code/projects/enter-the-faang/league/src/components/EnemyField/EnemyField.js":"11","/Users/esquire/code/projects/enter-the-faang/league/src/components/PlayerField/PlayerField.js":"12","/Users/esquire/code/projects/enter-the-faang/league/src/components/KingdomField/KingdomField.js":"13","/Users/esquire/code/projects/enter-the-faang/league/src/components/KingdomField/SCKingdomField.js":"14","/Users/esquire/code/projects/enter-the-faang/league/src/components/PlayerField/SCPlayerField.js":"15","/Users/esquire/code/projects/enter-the-faang/league/src/components/EnemyField/SCEnemyField.js":"16","/Users/esquire/code/projects/enter-the-faang/league/src/Data/SessionLogic.js":"17","/Users/esquire/code/projects/enter-the-faang/league/src/components/GameContext.js":"18","/Users/esquire/code/projects/enter-the-faang/league/src/Data/Cards.js":"19","/Users/esquire/code/projects/enter-the-faang/league/src/Pages/GameBoard/SCGameBoard.js":"20"},{"size":236,"mtime":1612132713936,"results":"21","hashOfConfig":"22"},{"size":2431,"mtime":1612132713892,"results":"23","hashOfConfig":"22"},{"size":191,"mtime":1611804813367,"results":"24","hashOfConfig":"22"},{"size":1107,"mtime":1610484726713,"results":"25","hashOfConfig":"22"},{"size":9315,"mtime":1611609709189,"results":"26","hashOfConfig":"22"},{"size":1235,"mtime":1612141023652,"results":"27","hashOfConfig":"22"},{"size":8893,"mtime":1612132713900,"results":"28","hashOfConfig":"22"},{"size":7763,"mtime":1612210823052,"results":"29","hashOfConfig":"22"},{"size":2608,"mtime":1612132713898,"results":"30","hashOfConfig":"22"},{"size":6818,"mtime":1612381026755,"results":"31","hashOfConfig":"22"},{"size":1538,"mtime":1612132713912,"results":"32","hashOfConfig":"22"},{"size":3296,"mtime":1612377158039,"results":"33","hashOfConfig":"22"},{"size":1757,"mtime":1612218001254,"results":"34","hashOfConfig":"22"},{"size":1594,"mtime":1612132713924,"results":"35","hashOfConfig":"22"},{"size":2891,"mtime":1612218001257,"results":"36","hashOfConfig":"22"},{"size":1675,"mtime":1612132713919,"results":"37","hashOfConfig":"22"},{"size":10238,"mtime":1612380852867,"results":"38","hashOfConfig":"22"},{"size":86,"mtime":1610826572545,"results":"39","hashOfConfig":"22"},{"size":6509,"mtime":1612372387679,"results":"40","hashOfConfig":"22"},{"size":2336,"mtime":1612379975837,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"oulkl",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/esquire/code/projects/enter-the-faang/league/src/index.js",[],["89","90"],"/Users/esquire/code/projects/enter-the-faang/league/src/App.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/SCApp.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/Data/Unit.js",[],["91","92"],"/Users/esquire/code/projects/enter-the-faang/league/src/Data/FaangStats.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/Pages/WelcomeScreen/WelcomeScreen.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/Data/PlayerUnits.js",["93"],"import React, { useEffect } from 'react';\nimport { faang } from './FaangStats';\n\nconst PlayerUnits = ({ trueSkill, setPlayerTeam }) => {\n\tconst eliteStats = faang.elite;\n\n\t\tclass Titan {\n\t\t\tconstructor(\n\t\t\t\tname,\n\t\t\t\telement,\n\t\t\t\tkingdom,\n\t\t\t\tmaxHealth,\n\t\t\t\thealth,\n\t\t\t\tattack,\n\t\t\t\tdefense,\n\t\t\t\tregeneration,\n\t\t\t\tspeed,\n\t\t\t\tenergy,\n\t\t\t\tzen,\n\t\t\t\tshowcase\n\t\t\t) {\n\t\t\t\t// specs\n\t\t\t\tthis.isAlive = true;\n\t\t\t\tthis.isTitan = true;\n\t\t\t\t// stats\n\t\t\t\tthis.name = name;\n\t\t\t\tthis.element = element;\n\t\t\t\tthis.kingdom = kingdom;\n\t\t\t\tthis.health = health;\n\t\t\t\tthis.maxHealth = maxHealth;\n\t\t\t\tthis.attack = attack;\n\t\t\t\tthis.defense = defense;\n\t\t\t\tthis.regeneration = regeneration;\n\t\t\t\tthis.speed = speed;\n\t\t\t\tthis.energy = energy;\n\t\t\t\tthis.zen = zen;\n\t\t\t\tthis.showcase = showcase;\n\t\t\t}\n\t\t\tspeak() {\n\t\t\t\tconsole.log(this.name);\n\t\t\t}\n\t\t\tattackUnit(unit) {\n\t\t\t\tconsole.log(\n\t\t\t\t\t`${this.name} attacked ${unit.name} and now it has ${unit.health} health remaining`\n\t\t\t\t);\n\t\t\t\tunit.health -= this.attack;\n\t\t\t\tif (unit.health <= 0) {\n\t\t\t\t\tunit.isAlive = false;\n\t\t\t\t\tconsole.log(`${unit.name} died from the attack`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\tfunction averageStats(object) {\n\t\t// TURN THE OBJECT INTO AN ARRAY OF OBJECTS\n\t\tlet data = Object.entries(object);\n\t\t// CREATE AN ARRAY FOR MAPPED DATA TO GO INTO\n\t\tlet dataArray = [];\n\t\t// CREATE AN OBJECT TO HOLD ALL STATS FROM MAPPED ARRAY\n\t\tlet statsObject = {\n\t\t\thealth: [],\n\t\t\tattack: [],\n\t\t\tdefense: [],\n\t\t\tregeneration: [],\n\t\t\tspeed: [],\n\t\t\ttotal: [],\n\t\t};\n\t\t// PUSH SEPARATE DATA SO IT CAN BE MUTATED\n\t\tdata.forEach((e) => {\n            dataArray.push(e[1]);\n\t\t});\n\t\t// PUSH ALL STATS INTO STATS OBJECT\n\t\tfor (let i = 0; i < dataArray.length; i++) {\n\t\t\tstatsObject.health.push(dataArray[i].health);\n\t\t\tstatsObject.attack.push(dataArray[i].attack);\n\t\t\tstatsObject.defense.push(dataArray[i].defense);\n\t\t\tstatsObject.regeneration.push(dataArray[i].regeneration);\n\t\t\tstatsObject.speed.push(dataArray[i].speed);\n\t\t\tstatsObject.total.push(dataArray[i].total);\n\t\t}\n\n\t\t// REDUCE ALL STATS IN EACH ARRAY INTO ONE VALUE\n\t\t// health\n\t\tstatsObject.health =\n\t\t\tstatsObject.health.reduce((a, b) => a + b, 0) /\n\t\t\tstatsObject.health.length;\n\t\t// attack\n\t\tstatsObject.attack =\n\t\t\tstatsObject.attack.reduce((a, b) => a + b, 0) /\n\t\t\tstatsObject.attack.length;\n\t\t// defense\n\t\tstatsObject.defense =\n\t\t\tstatsObject.defense.reduce((a, b) => a + b, 0) /\n\t\t\tstatsObject.defense.length;\n\t\t// regeneration\n\t\tstatsObject.regeneration =\n\t\t\tstatsObject.regeneration.reduce((a, b) => a + b, 0) /\n\t\t\tstatsObject.regeneration.length;\n\t\t// speed\n\t\tstatsObject.speed =\n\t\t\tstatsObject.speed.reduce((a, b) => a + b, 0) /\n\t\t\tstatsObject.speed.length;\n\t\t// total\n\t\tstatsObject.total =\n\t\t\tstatsObject.total.reduce((a, b) => a + b, 0) /\n            statsObject.total.length;\n        return statsObject\n\t\t// setTitanConversion(statsObject);\n\t}\n\n    const titans = {\n\t\tfire: {\n\t\t\thealth: 6,\n\t\t\tattack: 9,\n\t\t\tdefense: 5,\n\t\t\tenergy: 8,\n\t\t\tregeneration: 4,\n\t\t\tspeed: 7,\n\t\t\tzen: 5,\n\t\t\tcolors: {\n\t\t\t\tprimary: '#F7130A',\n\t\t\t\tsecondary: '#ED7609',\n\t\t\t\tcontrast: '#E02A02',\n\t\t\t},\n\t\t},\n\t\twater: {\n\t\t\thealth: 9,\n\t\t\tattack: 5,\n\t\t\tdefense: 7,\n\t\t\tenergy: 5,\n\t\t\tregeneration: 8,\n\t\t\tspeed: 6,\n\t\t\tzen: 4,\n\t\t\tcolors: {\n\t\t\t\tprimary: '#2F30E0',\n\t\t\t\tsecondary: '#268FED',\n\t\t\t\tcontrast: '#9326ED',\n\t\t\t},\n\t\t},\n\t\tstone: {\n\t\t\thealth: 8,\n\t\t\tattack: 5,\n\t\t\tdefense: 9,\n\t\t\tenergy: 4,\n\t\t\tregeneration: 6,\n\t\t\tspeed: 5,\n\t\t\tzen: 7,\n\t\t\tcolors: {\n\t\t\t\tprimary: '#706459',\n\t\t\t\tsecondary: '#877A64',\n\t\t\t\tcontrast: '#5F727D',\n\t\t\t},\n\t\t},\n\t\tair: {\n\t\t\thealth: 4,\n\t\t\tattack: 6,\n\t\t\tdefense: 5,\n\t\t\tenergy: 9,\n\t\t\tregeneration: 7,\n\t\t\tspeed: 8,\n\t\t\tzen: 5,\n\t\t\tcolors: {\n\t\t\t\tprimary: '#D0DAD8',\n\t\t\t\tsecondary: '#CFDEE6',\n\t\t\t\tcontrast: '#CFE6D4',\n\t\t\t},\n\t\t},\n\t\tlightning: {\n\t\t\thealth: 5,\n\t\t\tattack: 8,\n\t\t\tdefense: 4,\n\t\t\tenergy: 7,\n\t\t\tregeneration: 5,\n\t\t\tspeed: 9,\n\t\t\tzen: 6,\n\t\t\tcolors: {\n\t\t\t\tprimary: '#FAED3E',\n\t\t\t\tsecondary: '#E3D346',\n\t\t\t\tcontrast: '#23FAF5',\n\t\t\t},\n\t\t},\n\t\tterra: {\n\t\t\thealth: 7,\n\t\t\tattack: 4,\n\t\t\tdefense: 6,\n\t\t\tenergy: 5,\n\t\t\tregeneration: 9,\n\t\t\tspeed: 5,\n\t\t\tzen: 8,\n\t\t\tcolors: {\n\t\t\t\tprimary: '#3AC92A',\n\t\t\t\tsecondary: '#24E04A',\n\t\t\t\tcontrast: '#8B4513',\n\t\t\t},\n\t\t},\n\t\tmetal: {\n\t\t\thealth: 5,\n\t\t\tattack: 7,\n\t\t\tdefense: 8,\n\t\t\tenergy: 6,\n\t\t\tregeneration: 5,\n\t\t\tspeed: 4,\n\t\t\tzen: 9,\n\t\t\tcolors: {\n\t\t\t\tprimary: '#DBDBDB',\n\t\t\t\tsecondary: '#C4C4C4',\n\t\t\t\tcontrast: '#B5B5B5',\n\t\t\t},\n\t\t},\n\t};\n    \n    const fireTitan = new Titan(\n\t\t'Ajna',\n\t\t'Fire',\n\t\t'Fire Kingdom',\n        Math.floor(averageStats(eliteStats).health * (titans.fire.health * .1)),\n        Math.floor(averageStats(eliteStats).health * (titans.fire.health * .1)),\n        averageStats(eliteStats).attack * (titans.fire.attack * .1),\n        averageStats(eliteStats).defense * (titans.fire.defense * .1),\n        averageStats(eliteStats).regeneration * (titans.fire.regeneration * .1),\n        averageStats(eliteStats).speed * (titans.fire.speed * .1),\n        titans.fire.energy,\n        titans.fire.zen,\n        titans.fire\n    );\n\n    const waterTitan = new Titan(\n\t\t'Mulad',\n\t\t'Water',\n\t\t'Water Kingdom',\n        Math.floor(averageStats(eliteStats).health * (titans.water.health * .1)),\n        Math.floor(averageStats(eliteStats).health * (titans.water.health * .1)),\n        averageStats(eliteStats).attack * (titans.water.attack * .1),\n        averageStats(eliteStats).defense * (titans.water.defense * .1),\n        averageStats(eliteStats).regeneration * (titans.water.regeneration * .1),\n        averageStats(eliteStats).speed * (titans.water.speed * .1),\n        titans.water.energy,\n        titans.water.zen,\n        titans.water\n    );\n\n    const stoneTitan = new Titan(\n\t\t'Vishu',\n\t\t'Rock',\n\t\t'Stone Kingdom',\n        Math.floor(averageStats(eliteStats).health * (titans.stone.health * .1)),\n        Math.floor(averageStats(eliteStats).health * (titans.stone.health * .1)),\n        averageStats(eliteStats).attack * (titans.stone.attack * .1),\n        averageStats(eliteStats).defense * (titans.stone.defense * .1),\n        averageStats(eliteStats).regeneration * (titans.stone.regeneration * .1),\n        averageStats(eliteStats).speed * (titans.stone.speed * .1),\n        titans.stone.energy,\n        titans.stone.zen,\n        titans.stone\n    );\n\n    const airTitan = new Titan(\n\t\t'Nabhi',\n\t\t'Air',\n\t\t'Air Kingdom',\n        Math.floor(averageStats(eliteStats).health * (titans.air.health * .1)),\n        Math.floor(averageStats(eliteStats).health * (titans.air.health * .1)),\n        averageStats(eliteStats).attack * (titans.air.attack * .1),\n        averageStats(eliteStats).defense * (titans.air.defense * .1),\n        averageStats(eliteStats).regeneration * (titans.air.regeneration * .1),\n        averageStats(eliteStats).speed * (titans.air.speed * .1),\n        titans.air.energy,\n        titans.air.zen,\n        titans.air\n    );\n\n    const lightningTitan = new Titan(\n\t\t'Svadhi',\n\t\t'Electricity',\n\t\t'Lightning Kingdom',\n        Math.floor(averageStats(eliteStats).health * (titans.lightning.health * .1)),\n        Math.floor(averageStats(eliteStats).health * (titans.lightning.health * .1)),\n        averageStats(eliteStats).attack * (titans.lightning.attack * .1),\n        averageStats(eliteStats).defense * (titans.lightning.defense * .1),\n        averageStats(eliteStats).regeneration * (titans.lightning.regeneration * .1),\n        averageStats(eliteStats).speed * (titans.lightning.speed * .1),\n        titans.lightning.energy,\n        titans.lightning.zen,\n        titans.lightning\n    );\n\n    const terraTitan = new Titan(\n\t\t'Sahas',\n\t\t'Plant',\n\t\t'Terra Kingdom',\n        Math.floor(averageStats(eliteStats).health * (titans.terra.health * .1)),\n        Math.floor(averageStats(eliteStats).health * (titans.terra.health * .1)),\n        averageStats(eliteStats).attack * (titans.terra.attack * .1),\n        averageStats(eliteStats).defense * (titans.terra.defense * .1),\n        averageStats(eliteStats).regeneration * (titans.terra.regeneration * .1),\n        averageStats(eliteStats).speed * (titans.terra.speed * .1),\n        titans.terra.energy,\n        titans.terra.zen,\n        titans.terra\n    );\n\n    const metalTitan = new Titan(\n\t\t'Anaht',\n\t\t'Metal',\n\t\t'Metal Kingdom',\n        Math.floor(averageStats(eliteStats).health * (titans.metal.health * .1)),\n        Math.floor(averageStats(eliteStats).health * (titans.metal.health * .1)),\n        averageStats(eliteStats).attack * (titans.metal.attack * .1),\n        averageStats(eliteStats).defense * (titans.metal.defense * .1),\n        averageStats(eliteStats).regeneration * (titans.metal.regeneration * .1),\n        averageStats(eliteStats).speed * (titans.metal.speed * .1),\n        titans.metal.energy,\n        titans.metal.zen,\n        titans.metal\n    );\n\n    useEffect(() => {\n\t\tsetPlayerTeam([fireTitan, waterTitan, stoneTitan, airTitan, lightningTitan, terraTitan, metalTitan]);\n    },[])\n\n\n        \n\n\n\treturn <div></div>;\n};\n\nexport default PlayerUnits;\n","/Users/esquire/code/projects/enter-the-faang/league/src/Data/EnemyUnits.js",["94"],"import React, { useEffect } from 'react';\nimport { pedigree, faang, randomNames } from './FaangStats';\nimport { session } from './SessionLogic';\nimport { calculations } from '../Data/SessionLogic'\n\nconst EnemyFaangs = ({ difficulty, armySize, setEnemyUnits }) => {\n\tconst unitPool = [];\n\tclass BasicFaang {\n\t\tconstructor(\n\t\t\tname,\n\t\t\tcurrentHealth,\n\t\t\tmaxHealth,\n\t\t\tattack,\n\t\t\tdefense,\n\t\t\tregeneration,\n\t\t\tspeed,\n\t\t\trank,\n\t\t\tpedigree,\n\t\t\tspecies,\n\t\t\tshowcase\n\t\t) {\n\t\t\t// specs\n\t\t\tthis.isAlive = true;\n\t\t\tthis.rank = rank;\n\t\t\tthis.pedigree = pedigree;\n\t\t\tthis.species = species;\n\t\t\tthis.showcase = showcase;\n\t\t\t// stats\n\t\t\tthis.name = name;\n\t\t\tthis.currentHealth = currentHealth;\n\t\t\tthis.maxHealth = maxHealth;\n\t\t\tthis.attack = attack;\n\t\t\tthis.defense = defense;\n\t\t\tthis.regeneration = regeneration;\n\t\t\tthis.speed = speed;\n\t\t\tthis.isFaang = true;\n\t\t}\n\t\tspeak() {\n\t\t\tconsole.log(this.name);\n\t\t}\n\t\tattackUnit(target) {\n\t\t\tif (this.isAlive) {\n\t\t\t\ttarget.currentHealth -= \n\t\t\t\t\tcalculations.enemyDamageCalc(this, target, session);\n\t\t\t\tlet percent = (Math.ceil((target.currentHealth / target.maxHealth) * 100));\n\n\t\t\t\tif (target.currentHealth <= 0) {\n\t\t\t\t\ttarget.isAlive = false;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tevent: `${this.name} attacked ${target.name} and it was defeated`,\n\t\t\t\t\t\tbgColor: this.showcase.rankColor,\n\t\t\t\t\t\tcolor: '#fff',\n\t\t\t\t\t};\n\t\t\t\t} else return {\n\t\t\t\t\tevent: `${this.name} attacked ${target.name} and now it has ${percent}% health remaining`,\n\t\t\t\t\tbgColor: this.showcase.rankColor,\n\t\t\t\t\tcolor: '#fff'\n\t\t\t\t};\n\t\t\t} else return {\n\t\t\t\tevent: `${this.name} couldn't attack becuase it was defeated by a faster unit`,\n\t\t\t\tbgColor: this.showcase.rankColor,\n\t\t\t\tcolor: '#fff',\n\t\t\t};\n\t\t}\n\t}\n\n\tclass AdvancedFaang extends BasicFaang {\n\t\tconstructor(\n\t\t\tname,\n\t\t\tcurrentHealth,\n\t\t\tmaxHealth,\n\t\t\tattack,\n\t\t\tdefense,\n\t\t\tregeneration,\n\t\t\tspeed,\n\t\t\trank,\n\t\t\tpedigree,\n\t\t\tspecies,\n\t\t\tshowcase\n\t\t) {\n\t\t\tsuper(\n\t\t\t\tname,\n\t\t\t\tcurrentHealth,\n\t\t\t\tmaxHealth,\n\t\t\t\tattack,\n\t\t\t\tdefense,\n\t\t\t\tregeneration,\n\t\t\t\tspeed,\n\t\t\t\trank,\n\t\t\t\tpedigree,\n\t\t\t\tspecies,\n\t\t\t\tshowcase\n\t\t\t);\n\t\t\tthis.isAdmin = true;\n\t\t\tthis.class = 'Advanced';\n\t\t}\n\t}\n\n\tclass EliteFaang extends AdvancedFaang {\n\t\tconstructor(\n\t\t\tname,\n\t\t\tcurrentHealth,\n\t\t\tmaxHealth,\n\t\t\tattack,\n\t\t\tdefense,\n\t\t\tregeneration,\n\t\t\tspeed,\n\t\t\trank,\n\t\t\tpedigree,\n\t\t\tspecies,\n\t\t\tshowcase\n\t\t) {\n\t\t\tsuper(\n\t\t\t\tname,\n\t\t\t\tcurrentHealth,\n\t\t\t\tmaxHealth,\n\t\t\t\tattack,\n\t\t\t\tdefense,\n\t\t\t\tregeneration,\n\t\t\t\tspeed,\n\t\t\t\trank,\n\t\t\t\tpedigree,\n\t\t\t\tspecies,\n\t\t\t\tshowcase\n\t\t\t);\n\t\t\tthis.class = 'Elite';\n\t\t}\n\t}\n\n\t// FAANG GENERATOR\n\tlet basicUnits = faang.basic;\n\tlet advancedUnits = faang.advanced;\n\tlet eliteUnits = faang.elite;\n\n\t// RANDOM UNIT GENERATOR THAT PUSHES THE UNITS INTO THE UNIT POOL\n\tfunction generateRandomUnit(rank) {\n\t\tlet length = Object.keys(rank).length;\n\t\tlet randomNumber = Math.floor(Math.random() * length);\n\t\tlet randomUnit = rank[Object.keys(rank)[randomNumber]];\n\t\tlet percentChance = Math.floor(Math.random() * 100);\n\t\trandomUnit.name =\n\t\t\trandomNames[Math.floor(Math.random() * randomNames.length)];\n\t\tif (rank.dra.rank === 'Basic') {\n\t\t\tif (percentChance <= 95) {\n\t\t\t\trandomUnit.pedigree =\n\t\t\t\t\tpedigree.commonLevelOne[\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\tMath.random() * pedigree.commonLevelOne.length\n\t\t\t\t\t\t)\n\t\t\t\t\t];\n\t\t\t} else {\n\t\t\t\trandomUnit.pedigree =\n\t\t\t\t\tpedigree.specialLevelOne[\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\tMath.random() * pedigree.specialLevelOne.length\n\t\t\t\t\t\t)\n\t\t\t\t\t];\n\t\t\t}\n\t\t\tunitPool.push(\n\t\t\t\tnew BasicFaang(\n\t\t\t\t\trandomUnit.name,\n\t\t\t\t\trandomUnit.health,\n\t\t\t\t\trandomUnit.health,\n\t\t\t\t\trandomUnit.attack,\n\t\t\t\t\trandomUnit.defense,\n\t\t\t\t\trandomUnit.regeneration,\n\t\t\t\t\trandomUnit.speed,\n\t\t\t\t\trandomUnit.rank,\n\t\t\t\t\trandomUnit.pedigree,\n\t\t\t\t\trandomUnit.species,\n\t\t\t\t\tcreateShowcase(randomUnit)\n\t\t\t\t)\n\t\t\t);\n\t\t} else if (rank.dra.rank === 'Advanced') {\n\t\t\tif (percentChance <= 95) {\n\t\t\t\trandomUnit.pedigree =\n\t\t\t\t\tpedigree.commonLevelTwo[\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\tMath.random() * pedigree.commonLevelTwo.length\n\t\t\t\t\t\t)\n\t\t\t\t\t];\n\t\t\t} else {\n\t\t\t\trandomUnit.pedigree =\n\t\t\t\t\tpedigree.specialLevelTwo[\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\tMath.random() * pedigree.specialLevelTwo.length\n\t\t\t\t\t\t)\n\t\t\t\t\t];\n\t\t\t}\n\t\t\tunitPool.push(\n\t\t\t\tnew AdvancedFaang(\n\t\t\t\t\trandomUnit.name,\n\t\t\t\t\trandomUnit.health,\n\t\t\t\t\trandomUnit.health,\n\t\t\t\t\trandomUnit.attack,\n\t\t\t\t\trandomUnit.defense,\n\t\t\t\t\trandomUnit.regeneration,\n\t\t\t\t\trandomUnit.speed,\n\t\t\t\t\trandomUnit.rank,\n\t\t\t\t\trandomUnit.pedigree,\n\t\t\t\t\trandomUnit.species,\n\t\t\t\t\tcreateShowcase(randomUnit)\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\tif (percentChance <= 95) {\n\t\t\t\trandomUnit.pedigree =\n\t\t\t\t\tpedigree.commonLevelThree[\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\tMath.random() * pedigree.commonLevelThree.length\n\t\t\t\t\t\t)\n\t\t\t\t\t];\n\t\t\t} else {\n\t\t\t\trandomUnit.pedigree =\n\t\t\t\t\tpedigree.specialLevelThree[\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\tMath.random() * pedigree.specialLevelThree.length\n\t\t\t\t\t\t)\n\t\t\t\t\t];\n\t\t\t}\n\t\t\tunitPool.push(\n\t\t\t\tnew EliteFaang(\n\t\t\t\t\trandomUnit.name,\n\t\t\t\t\trandomUnit.health,\n\t\t\t\t\trandomUnit.health,\n\t\t\t\t\trandomUnit.attack,\n\t\t\t\t\trandomUnit.defense,\n\t\t\t\t\trandomUnit.regeneration,\n\t\t\t\t\trandomUnit.speed,\n\t\t\t\t\trandomUnit.rank,\n\t\t\t\t\trandomUnit.pedigree,\n\t\t\t\t\trandomUnit.species,\n\t\t\t\t\tcreateShowcase(randomUnit)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\t// SHOWCASE CREATOR\n\tfunction createShowcase(unit) {\n\t\tlet showcase = {\n\t\t\tdescription: null,\n\t\t\trankColor: null,\n\t\t\tpedigreeColor: null,\n\t\t\tspeciesColor: null,\n\t\t};\n\n\t\t// SET COLOR FOR RANKING\n\t\tswitch (unit.rank) {\n\t\t\tcase 'Basic':\n\t\t\t\tshowcase.rankColor = '#9867FF';\n\t\t\t\tbreak;\n\t\t\tcase 'Advanced':\n\t\t\t\tshowcase.rankColor = '#5C25BA';\n\t\t\t\tbreak;\n\t\t\tcase 'Elite':\n\t\t\t\tshowcase.rankColor = '#24183D';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\t// SET COLOR FOR SPECIES\n\t\tswitch (unit.species) {\n\t\t\tcase 'Dra':\n\t\t\t\tshowcase.speciesColor = '#5966FF';\n\t\t\t\tbreak;\n\t\t\tcase 'Tyr':\n\t\t\t\tshowcase.speciesColor = '#FF7373';\n\t\t\t\tbreak;\n\t\t\tcase 'Sal':\n\t\t\t\tshowcase.speciesColor = '#FFD640';\n\t\t\t\tbreak;\n\t\t\tcase 'Met':\n\t\t\t\tshowcase.speciesColor = '#4DFF80';\n\t\t\t\tbreak;\n\t\t\tcase 'Gar':\n\t\t\t\tshowcase.speciesColor = '#4BDDFF';\n\t\t\t\tbreak;\n\t\t\tcase 'Hyd':\n\t\t\t\tshowcase.speciesColor = '#FF9230';\n\t\t\t\tbreak;\n\t\t\tcase 'Goo':\n\t\t\t\tshowcase.speciesColor = '#DE63FF';\n\t\t\t\tbreak;\n\t\t\tcase 'Kom':\n\t\t\t\tshowcase.speciesColor = '#B5FF3D';\n\t\t\t\tbreak;\n\t\t\tcase 'Pul':\n\t\t\t\tshowcase.speciesColor = '#314511';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// SET COLOR FOR PEDIGREE\n\t\tif (pedigree.commonLevelOne.includes(unit.pedigree)) {\n\t\t\tshowcase.pedigreeColor = '#9C5221';\n\t\t} else if (pedigree.specialLevelOne.includes(unit.pedigree)) {\n\t\t\tshowcase.pedigreeColor = '#9C5221';\n\t\t} else if (pedigree.commonLevelTwo.includes(unit.pedigree)) {\n\t\t\tshowcase.pedigreeColor = '#AAA9AD';\n\t\t} else if (pedigree.specialLevelTwo.includes(unit.pedigree)) {\n\t\t\tshowcase.pedigreeColor = '#AAA9AD';\n\t\t} else if (pedigree.commonLevelThree.includes(unit.pedigree)) {\n\t\t\tshowcase.pedigreeColor = '#F5D327';\n\t\t} else if (pedigree.specialLevelThree.includes(unit.pedigree)) {\n\t\t\tshowcase.pedigreeColor = '#F0CE26';\n\t\t}\n\t\treturn showcase;\n\t}\n\n\t// PLAYER GAME SETTINGS\n\n\tfor (let i = 0; i < armySize; i++) {\n\t\t// SELECT PERCENTAGE OF UNITS WILL HAVE WHICH CLASSES\n\t\tlet difficultyArray = [];\n\t\tif (difficulty === 'easy') {\n\t\t\tdifficultyArray = [70, 95];\n\t\t} else if (difficulty === 'normal') {\n\t\t\tdifficultyArray = [60, 90];\n\t\t} else if (difficulty === 'veteran') {\n\t\t\tdifficultyArray = [40, 70];\n\t\t} else if (difficulty === 'insane') {\n\t\t\tdifficultyArray = [20, 50];\n\t\t}\n\n\t\t// SELECT HOW MANY UNITS WILL BE CREATED\n\t\tlet percentChance = Math.floor(Math.random() * 100);\n\t\tif (percentChance < difficultyArray[0]) {\n\t\t\tgenerateRandomUnit(basicUnits);\n\t\t} else if (percentChance < difficultyArray[1]) {\n\t\t\tgenerateRandomUnit(advancedUnits);\n\t\t} else {\n\t\t\tgenerateRandomUnit(eliteUnits);\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tsetEnemyUnits(unitPool);\n\t}, []);\n\n\treturn <div></div>;\n};\n\nexport default EnemyFaangs;\n","/Users/esquire/code/projects/enter-the-faang/league/src/Data/PlayerKingdoms.js",["95"],"import React, { useEffect } from 'react';\n\nconst PlayerKingdoms = ({ setPlayerKingdoms, playerTeam }) => {\n\n\tclass Kingdom {\n\t\tconstructor(name, health, defense, regeneration, showcase) {\n\t\t\t// specs\n\t\t\tthis.isAlive = true;\n\t\t\tthis.isKingdom = true\n\t\t\t// stats\n\t\t\tthis.name = name;\n\t\t\tthis.health = health;\n\t\t\tthis.defense = defense;\n\t\t\tthis.regeneration = regeneration;\n\t\t\tthis.showcase = showcase;\n\t\t\tthis.speed = 0;\n\t\t}\n\t}\n\n\tconst fireKingdom = new Kingdom(\n\t\t'Fire Kingdom',\n\t\tMath.floor({ ...playerTeam[0] }.health) * 3,\n\t\t{ ...playerTeam[0] }.defense,\n\t\t{ ...playerTeam[0] }.regeneration,\n\t\t{ ...playerTeam[0] }.showcase,\n\t);\n\n\tconst waterKingdom = new Kingdom(\n\t\t'Water Kingdom',\n\t\tMath.floor({ ...playerTeam[1] }.health) * 3,\n\t\t{ ...playerTeam[1] }.defense,\n\t\t{ ...playerTeam[1] }.regeneration,\n\t\t{ ...playerTeam[1] }.showcase,\n\t);\n\n\tconst stoneKingdom = new Kingdom(\n\t\t'Stone Kingdom',\n\t\tMath.floor({ ...playerTeam[2] }.health) * 3,\n\t\t{ ...playerTeam[2] }.defense,\n\t\t{ ...playerTeam[2] }.regeneration,\n\t\t{ ...playerTeam[2] }.showcase,\n\t);\n\n\tconst airKingdom = new Kingdom(\n\t\t'Air Kingdom',\n\t\tMath.floor({ ...playerTeam[3] }.health) * 3,\n\t\t{ ...playerTeam[3] }.defense,\n\t\t{ ...playerTeam[3] }.regeneration,\n\t\t{ ...playerTeam[3] }.showcase,\n\t);\n\n\tconst lightningKingdom = new Kingdom(\n\t\t'Lightning Kingdom',\n\t\tMath.floor({ ...playerTeam[4] }.health) * 3,\n\t\t{ ...playerTeam[4] }.defense,\n\t\t{ ...playerTeam[4] }.regeneration,\n\t\t{ ...playerTeam[4] }.showcase,\n\t);\n\n\tconst terraKingdom = new Kingdom(\n\t\t'Terra Kingdom',\n\t\tMath.floor({ ...playerTeam[5] }.health) * 3,\n\t\t{ ...playerTeam[5] }.defense,\n\t\t{ ...playerTeam[5] }.regeneration,\n\t\t{ ...playerTeam[5] }.showcase,\n\t);\n\n\tconst metalKingdom = new Kingdom(\n\t\t'Metal Kingdom',\n\t\tMath.floor({ ...playerTeam[6] }.health) * 3,\n\t\t{ ...playerTeam[6] }.defense,\n\t\t{ ...playerTeam[6] }.regeneration,\n\t\t{ ...playerTeam[6] }.showcase,\n\t);\n\n\tuseEffect(() => {\n\t\tsetPlayerKingdoms([\n\t\t\tfireKingdom,\n\t\t\twaterKingdom,\n\t\t\tstoneKingdom,\n\t\t\tairKingdom,\n\t\t\tlightningKingdom,\n\t\t\tterraKingdom,\n\t\t\tmetalKingdom,\n\t\t]);\n\t}, []);\n\n\treturn <div></div>;\n};\n\nexport default PlayerKingdoms;\n","/Users/esquire/code/projects/enter-the-faang/league/src/Pages/GameBoard/GameBoard.js",["96","97"],"/Users/esquire/code/projects/enter-the-faang/league/src/components/EnemyField/EnemyField.js",["98","99"],"import React from 'react';\n\nimport {\n\tEnemyFieldWrapper,\n\tEnemyFieldLabel,\n\tEnemyFlexContainer,\n\tFaangContainer,\n\tFaangName,\n\tFaangHealth,\n\tFaangHeader,\n\tFaangContent,\n\tEnemyRank,\n} from './SCEnemyField';\n\nconst EnemyField = ({ enemyUnits, functions }) => {\n\n\treturn (\n\t\t<EnemyFieldWrapper>\n\t\t\t<EnemyFieldLabel>Enemies</EnemyFieldLabel>\n\t\t\t<EnemyFlexContainer>\n\t\t\t\t{enemyUnits.slice(0, 5).map((unit) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<FaangContainer\n\t\t\t\t\t\t\tunit={unit}\n\t\t\t\t\t\t\tkey={`${unit.rank} ${unit.species} : ${unit.pedigree} ${unit.name}`}\n\t\t\t\t\t\t\tonClick={() => functions.choose(unit)}>\n\t\t\t\t\t\t\t<FaangContent unit={unit}>\n\t\t\t\t\t\t\t\t<FaangHeader unit={unit}>\n\t\t\t\t\t\t\t\t\t<FaangName>\n\t\t\t\t\t\t\t\t\t\t{unit.pedigree} {unit.name}\n\t\t\t\t\t\t\t\t\t</FaangName>\n\t\t\t\t\t\t\t\t</FaangHeader>\n\t\t\t\t\t\t\t\t<FaangHealth>\n\t\t\t\t\t\t\t\t\thealth: {Math.floor(unit.health)}\n\t\t\t\t\t\t\t\t</FaangHealth>\n\t\t\t\t\t\t\t</FaangContent>\n\t\t\t\t\t\t\t<EnemyRank>\n\t\t\t\t\t\t\t\t{unit.rank} {unit.species}\n\t\t\t\t\t\t\t</EnemyRank>\n\t\t\t\t\t\t</FaangContainer>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</EnemyFlexContainer>\n\t\t</EnemyFieldWrapper>\n\t);\n};\n\nexport default EnemyField;\n","/Users/esquire/code/projects/enter-the-faang/league/src/components/PlayerField/PlayerField.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/components/KingdomField/KingdomField.js",["100"],"import React, { useState } from 'react';\nimport { KingdomFieldWrapper, KingdomFieldLabel, KingdomName, KingdomStats, KingdomContainer, KingdomsFlexContainer, HealthBarContainer, HealthBar } from './SCKingdomField';\n\nconst KingdomField = ({ playerKingdoms, functions }) => {\n\tconst [hidden, setHidden] = useState(true)\n\n    return (\n        <KingdomFieldWrapper>\n            <KingdomFieldLabel>Player Kingdoms</KingdomFieldLabel>\n            <KingdomsFlexContainer>\n            {playerKingdoms.map((kingdom) => {\n                return (\n\t\t\t\t\t<KingdomContainer\n\t\t\t\t\t\tkingdom={kingdom}\n\t\t\t\t\t\tonMouseEnter={() => setHidden(false)}\n\t\t\t\t\t\tonMouseLeave={() => setHidden(true)}\n\t\t\t\t\t\tkey={kingdom.name}\n\t\t\t\t\t\tonClick={() => functions.choose(kingdom)}>\n\t\t\t\t\t\t<KingdomName kingdom={kingdom}>\n\t\t\t\t\t\t\t{kingdom.name}\n\t\t\t\t\t\t</KingdomName>\n\t\t\t\t\t\t<HealthBarContainer kingdom={kingdom}>\n\t\t\t\t\t\t\t<HealthBar\n\t\t\t\t\t\t\t\tkingdom={kingdom}\n\t\t\t\t\t\t\t\tpercent={Math.ceil(\n\t\t\t\t\t\t\t\t\t(kingdom.currentHealth / kingdom.maxHealth) * 100\n\t\t\t\t\t\t\t\t)}>\n\t\t\t\t\t\t\t\t{Math.ceil(\n\t\t\t\t\t\t\t\t\t(kingdom.currentHealth / kingdom.maxHealth) * 100\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t%\n\t\t\t\t\t\t\t</HealthBar>\n\t\t\t\t\t\t</HealthBarContainer>\n\t\t\t\t\t\t<KingdomStats hidden={hidden}>\n\t\t\t\t\t\t\t<p>Health: {kingdom.showcase.health}/10</p>\n\t\t\t\t\t\t\t<p>Attack: {kingdom.showcase.attack}/10</p>\n\t\t\t\t\t\t\t<p>Defense: {kingdom.showcase.defense}/10</p>\n\t\t\t\t\t\t\t<p>Energy: {kingdom.showcase.energy}/10</p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tRegeneration: {kingdom.showcase.regeneration}/10\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p>Speed: {kingdom.showcase.speed}/10</p>\n\t\t\t\t\t\t\t<p>Zen: {kingdom.showcase.zen}/10</p>\n\t\t\t\t\t\t</KingdomStats>\n\t\t\t\t\t</KingdomContainer>\n\t\t\t\t);\n            })}\n            </KingdomsFlexContainer>\n        </KingdomFieldWrapper>\n    );\n};\n\nexport default KingdomField;\n","/Users/esquire/code/projects/enter-the-faang/league/src/components/KingdomField/SCKingdomField.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/components/PlayerField/SCPlayerField.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/components/EnemyField/SCEnemyField.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/Data/SessionLogic.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/components/GameContext.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/Data/Cards.js",[],"/Users/esquire/code/projects/enter-the-faang/league/src/Pages/GameBoard/SCGameBoard.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"101","replacedBy":"105"},{"ruleId":"103","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":319,"column":7,"nodeType":"109","endLine":319,"endColumn":9,"suggestions":"110"},{"ruleId":"107","severity":1,"message":"111","line":340,"column":5,"nodeType":"109","endLine":340,"endColumn":7,"suggestions":"112"},{"ruleId":"107","severity":1,"message":"113","line":94,"column":5,"nodeType":"109","endLine":94,"endColumn":7,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":9,"column":2,"nodeType":"117","messageId":"118","endLine":9,"endColumn":16},{"ruleId":"107","severity":1,"message":"119","line":200,"column":5,"nodeType":"109","endLine":200,"endColumn":72,"suggestions":"120"},{"ruleId":"115","severity":1,"message":"121","line":17,"column":9,"nodeType":"117","messageId":"118","endLine":17,"endColumn":18},{"ruleId":"115","severity":1,"message":"122","line":17,"column":20,"nodeType":"117","messageId":"118","endLine":17,"endColumn":32},{"ruleId":"115","severity":1,"message":"123","line":5,"column":17,"nodeType":"117","messageId":"118","endLine":5,"endColumn":26},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],["124"],["125"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'airTitan', 'fireTitan', 'lightningTitan', 'metalTitan', 'setPlayerTeam', 'stoneTitan', 'terraTitan', and 'waterTitan'. Either include them or remove the dependency array. If 'setPlayerTeam' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["126"],"React Hook useEffect has missing dependencies: 'setEnemyUnits' and 'unitPool'. Either include them or remove the dependency array. If 'setEnemyUnits' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["127"],"React Hook useEffect has missing dependencies: 'airKingdom', 'fireKingdom', 'lightningKingdom', 'metalKingdom', 'setPlayerKingdoms', 'stoneKingdom', 'terraKingdom', and 'waterKingdom'. Either include them or remove the dependency array. If 'setPlayerKingdoms' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["128"],"no-unused-vars","'BoardContainer' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'listUnits' and 'setAllUnitsOnField'. Either include them or remove the dependency array. If 'setAllUnitsOnField' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["129"],"'enemyInfo' is assigned a value but never used.","'setEnemyInfo' is assigned a value but never used.","'setHidden' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},"Update the dependencies array to be: [airTitan, fireTitan, lightningTitan, metalTitan, setPlayerTeam, stoneTitan, terraTitan, waterTitan]",{"range":"138","text":"139"},"Update the dependencies array to be: [setEnemyUnits, unitPool]",{"range":"140","text":"141"},"Update the dependencies array to be: [airKingdom, fireKingdom, lightningKingdom, metalKingdom, setPlayerKingdoms, stoneKingdom, terraKingdom, waterKingdom]",{"range":"142","text":"143"},"Update the dependencies array to be: [enemyUnits, playerTeam, playerKingdoms, session, session.eventLog, setAllUnitsOnField, listUnits]",{"range":"144","text":"145"},[8823,8825],"[airTitan, fireTitan, lightningTitan, metalTitan, setPlayerTeam, stoneTitan, terraTitan, waterTitan]",[7704,7706],"[setEnemyUnits, unitPool]",[2546,2548],"[airKingdom, fireKingdom, lightningKingdom, metalKingdom, setPlayerKingdoms, stoneKingdom, terraKingdom, waterKingdom]",[5530,5597],"[enemyUnits, playerTeam, playerKingdoms, session, session.eventLog, setAllUnitsOnField, listUnits]"]